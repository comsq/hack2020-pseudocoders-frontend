{"version":3,"sources":["components/User/User.module.css","components/CommonTasks/TasksPage.module.css","components/DefaultLayout/DefaultLayout.module.css","App.module.css","components/PageSpinner/PageSpinner.module.css","components/Login/Login.module.css","components/Create/Create.module.css","components/Task/Task.module.css","stores/User.ts","helpers/AsyncHelper.ts","helpers/JsonSafe.ts","helpers/LocalStorageSafe.ts","helpers/StoreHelper.ts","components/Login/Login.tsx","components/PageSpinner/PageSpinner.tsx","components/NotFound/NotFound.tsx","components/WrapperUser/WrapperUser.tsx","components/User/User.tsx","components/DefaultLayout/logo.png","helpers/WindowHelper.ts","components/DefaultLayout/DefaultLayout.tsx","helpers/ArrayHelper.ts","components/TeacherPage/TeacherPage.tsx","stores/Create.ts","components/Create/TestBlock.tsx","components/Create/Create.tsx","components/Create/index.tsx","components/TeacherPage/TeacherStudents/GroupStore.ts","stores/Task.ts","components/TeacherPage/TeacherStudents/GroupsPage.tsx","components/TeacherPage/TeacherStudents/TeacherStudents.tsx","components/CommonMonitor/MonitorStore.ts","components/CommonMonitor/MonitorPage.tsx","components/CommonMonitor/CommonMonitor.tsx","components/Task/Task.tsx","components/CommonTasks/TasksPage.tsx","components/CommonTasks/CommonTasks.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/CommonMonitor/MonitorPage.module.css","components/TeacherPage/TeacherStudents/GroupsPage.module.css"],"names":["module","exports","UserType","AsyncHelper","time","Promise","resolve","setTimeout","JsonSafe","text","reviver","JSON","parse","value","replacer","space","stringify","LocalStorageSafe","key","item","localStorage","getItem","setItem","WithLoadingFlags","action","isLoading","isLoaded","hasError","isConsumerInitialized","updateTimeoutId","interval","data","this","makeAutoObservable","console","error","load","tick","loadWithSavingState","bind","window","clearTimeout","func","UserUtils","user","first_name","last_name","UserStore","api","login","password","axios","post","res","loadList","get","editorStatus","userId","startEditor","status","stopEditor","checkLogin","editor","list","setUser","setEditor","Login","observer","values","a","info","statusText","response","errorText","message","useEffect","navigate","className","styles","loginWrapper","labelCol","span","wrapperCol","name","onFinish","Item","label","rules","required","Password","offset","type","htmlType","PageSpinner","spinnerWrapper","indicator","LoadingOutlined","spin","NotFound","useState","notFound","setNotFound","isMounted","useRef","current","WrapperUser","children","to","noThrow","User","isEditorRunning","editorButtonMessage","isEditorChanging","id","email","editorButton","onClick","danger","loading","logOutButton","WindowHelper","newWindow","open","opener","Header","Layout","Content","Footer","DefaultLayout","indexMenuItem","menuItems","setIndexMenuItem","theme","mode","defaultSelectedKeys","alt","logo","src","map","index","path","startsWith","title","content","footer","ArrayHelper","array","filter","Boolean","TeacherPage","teacher","port","getMenuItems","startIndexMenuItem","findIndex","Error","CreateStore","loadLanguages","saveTask","slug","slugify","languages","saveProcess","saveStatus","lang","setLanguages","TextArea","Input","TestBlock","input","output","idx","onChangeTests","onDelete","onChange","useCallback","e","target","testHide","removeButton","icon","DeleteOutlined","shape","test","file","fileName","rows","Option","Select","modules","toolbar","header","color","indent","formats","localStorageName","localStorageDescription","localStorageLanguages","localStorageTests","localStorageSave","saveInLocalStorage","getLocalStorageValue","nameLocalStorage","defaultValue","valueString","Create","getLanguages","onSaveTask","description","tests","log","forEach","removeItem","setDescription","setTests","setName","debouncedSaveInLocalStorage","useDebouncedCallback","nameVariable","onChangeName","callback","onChangeDescription","onChangeLanguages","nameFile","newTests","addTest","removeTest","_","i","tagsLanguages","useMemo","language","createTask","container","languges","langugesTitle","selectLanguages","size","placeholder","style","minWidth","marginBottom","addonBefore","preview","paragraph","padding","dangerouslySetInnerHTML","__html","addButton","PlusOutlined","saveButtonBlock","SaveOutlined","TeacherCreateTask","GroupStore","createGroup","editGroup","patch","group","TaskStore","loadTask","loadListByUser","user_id","sendTask","taskId","task","listUser","GroupsPage","localStorageCurrentGroupKey","currentGroup","setCurrentGroup","visibleCreateGroupModal","setVisibleCreateGroupModal","visibleEditGroupModal","setVisibleEditGroupModal","isEditMode","currentGroupId","find","waitDefaultGroup","handleChange","curGroup","onCreate","studentIds","taskIds","users","tasks","owner","Math","random","successText","success","onCancel","groups","initialValues","undefined","visible","destroyOnClose","renderCreateGroupModal","subHeader","options","width","renderDropdownGroups","studentsAndTasks","locale","emptyText","students","itemLayout","dataSource","includes","renderItem","TaskStatus","TeacherStudents","MonitorStore","sort","md1","md2","date","MonitorPage","searchText","setSearchText","searchedColumn","setSearchColumn","searchInput","isTeacher","addConsumer","removeConsumer","getStringSorter","data1","data2","String","localeCompare","getStatusString","percent","running","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","onPressEnter","handleSearch","SearchOutlined","searchButton","handleReset","filterIcon","filtered","onFilter","record","toString","toLowerCase","onFilterDropdownVisibleChange","select","render","highlightClassName","highlight","searchWords","autoEscape","textToHighlight","courses","task_author","passed_tests_count","tests_count","dateObj","Date","round","toLocaleDateString","toLocaleTimeString","userName","taskName","testCount","columns","sorter","Number","CommonMonitor","Task","setLanguage","getTask","handleSendTask","role","Component","authorBlock","author","languageItem","Fragment","testName","fileTitle","fileContent","buttonBlock","student","href","disabled","selectLang","buttonEditor","TasksPage","getListByUser","calculateVerdict","verdict","prepareVerdict","join","getColumns","CommonTasks","App","setCheckLogin","app","router","default","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","configure","reactionScheduler","f","enforceActions","defaults","baseURL","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.c8734a53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__-bJlS\",\"editorButton\":\"User_editorButton__XCQJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monitorPage\":\"TasksPage_monitorPage__3lLRr\",\"searchInput\":\"TasksPage_searchInput__1m2Ex\",\"searchButton\":\"TasksPage_searchButton__2lSiU\",\"highlight\":\"TasksPage_highlight__2OtSK\",\"status\":\"TasksPage_status__3cKfZ\",\"running\":\"TasksPage_running__20DRu\",\"stopped\":\"TasksPage_stopped__36qA5\",\"ce\":\"TasksPage_ce__3Qj3t\",\"re\":\"TasksPage_re__2xrwl\",\"tle\":\"TasksPage_tle__OCOv8\",\"wa\":\"TasksPage_wa__w8slL\",\"ok\":\"TasksPage_ok__1MqG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DefaultLayout_content__3epWu\",\"footer\":\"DefaultLayout_footer__2qlk-\",\"logo\":\"DefaultLayout_logo__3goRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"router\":\"App_router__3W9nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"PageSpinner_spinnerWrapper__2Kwx6\",\"indicator\":\"PageSpinner_indicator__1MURC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2rzG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"removeButton\":\"Create_removeButton__1mZ_X\",\"container\":\"Create_container__1yu4s\",\"title\":\"Create_title__ZXhrt\",\"description\":\"Create_description__2Smnj\",\"preview\":\"Create_preview__2PFoA\",\"paragraph\":\"Create_paragraph__KTCat\",\"languges\":\"Create_languges__134fL\",\"langugesTitle\":\"Create_langugesTitle__AMecW\",\"selectLanguages\":\"Create_selectLanguages__38_Df\",\"file\":\"Create_file__26DrL\",\"fileName\":\"Create_fileName__3Rrmi\",\"testHide\":\"Create_testHide__32DBf\",\"addButton\":\"Create_addButton__1RMIv\",\"saveButtonBlock\":\"Create_saveButtonBlock__PczEz\",\"test\":\"Create_test__1p6Hi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Task_container__fnxTo\",\"title\":\"Task_title__17f2i\",\"author\":\"Task_author__2QMIz\",\"languages\":\"Task_languages__1y38Q\",\"languageItem\":\"Task_languageItem__1OLhj\",\"test\":\"Task_test__Olo7V\",\"testName\":\"Task_testName__1edoE\",\"paragraph\":\"Task_paragraph__2nomt\",\"file\":\"Task_file__3zvTt\",\"fileTitle\":\"Task_fileTitle__ooVfH\",\"fileContent\":\"Task_fileContent__3rXow\",\"buttonBlock\":\"Task_buttonBlock__IqnWP\",\"buttonEditor\":\"Task_buttonEditor__3EQMr\",\"selectLang\":\"Task_selectLang__2WNG1\",\"authorBlock\":\"Task_authorBlock__1QHzF\"};","import axios from 'axios';\nimport { makeAutoObservable } from 'mobx';\nimport { AsyncHelper } from 'src/helpers/AsyncHelper';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nimport { WithLoadingFlags } from 'src/helpers/StoreHelper';\n\nexport enum UserType {\n    student = 'student',\n    teacher = 'teacher',\n}\n\nexport type IUser = {\n    id: number;\n    login: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    type: UserType;\n};\n\nexport type SimpleUser = Pick<IUser, 'id' | 'login' | 'last_name' | 'first_name'>;\n\nexport type IEditor = {\n    status: 'running' | 'exited';\n    port?: number;\n    isLoading?: boolean;\n};\n\nfunction getApi() {\n    return {\n        async login({ login, password }: { login: string; password: string }) {\n            const res = await axios.post<IUser>('/api/login/', {\n                login,\n                password,\n            });\n            return res.data;\n        },\n        async loadList() {\n            const res = await axios.get<IUser[]>('/api/users/');\n\n            return res.data;\n        },\n\n        async editorStatus(userId: number) {\n            const res = await axios.get<IEditor>(`/tasks/editor/${userId}/status/`);\n\n            return res.data;\n        },\n\n        async startEditor(userId: number) {\n            await axios.post(`/tasks/editor/${userId}/start/`);\n\n            let res: IEditor = await this.editorStatus(userId);\n            while (res?.status !== 'running') {\n                await AsyncHelper.delay(1000);\n                res = await this.editorStatus(userId);\n            }\n\n            return res;\n        },\n\n        async stopEditor(userId: number) {\n            await axios.post(`/tasks/editor/${userId}/stop/`);\n\n            let res: IEditor = await this.editorStatus(userId);\n            while (res?.status !== 'exited') {\n                await AsyncHelper.delay(1000);\n                res = await this.editorStatus(userId);\n            }\n\n            return res;\n        },\n    };\n}\n\nclass UserStoreClass {\n    api = getApi();\n    checkLogin = false;\n    user: IUser | null = null;\n    editor: IEditor | null = null;\n\n    list = new WithLoadingFlags<IUser[]>(this.api.loadList);\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setUser(user: IUser | null) {\n        this.user = user;\n        LocalStorageSafe.setItem('user', this.user);\n    }\n\n    setEditor(editor: IEditor | null) {\n        this.editor = editor;\n    }\n\n    setCheckLogin() {\n        this.checkLogin = true;\n    }\n\n    async login({ login, password }: { login: string; password: string }) {\n        const user = await this.api.login({ login, password });\n        this.setUser(user);\n    }\n\n    async editorStatus(userId: number) {\n        const editor = await this.api.editorStatus(userId);\n        this.setEditor(editor);\n    }\n\n    async startEditor(userId: number) {\n        if (this.editor) {\n            this.setEditor({ ...this.editor, isLoading: true });\n        }\n\n        const editor = await this.api.startEditor(userId);\n        this.setEditor(editor);\n    }\n\n    async stopEditor(userId: number) {\n        if (this.editor) {\n            this.setEditor({ ...this.editor, isLoading: true });\n        }\n\n        const editor = await this.api.stopEditor(userId);\n        this.setEditor(editor);\n    }\n}\n\nexport const UserUtils = {\n    getFullName(user: SimpleUser) {\n        return `${user.first_name} ${user.last_name}`;\n    },\n};\n\nexport const UserStore = new UserStoreClass();\n","export const AsyncHelper = {\n    delay(time: number) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, time);\n        });\n    },\n};\n","export const JsonSafe = {\n    parse<T = unknown>(text: string, reviver?: (this: T, key: string, value: T) => T): T | null {\n        try {\n            return JSON.parse(text, reviver) as T;\n        } catch {\n            return null;\n        }\n    },\n\n    stringify<T = unknown>(\n        value: T,\n        replacer?: (this: T, key: string, value: T) => T,\n        space?: string | number,\n    ): string {\n        try {\n            return JSON.stringify(value, replacer, space) || '';\n        } catch {\n            return '';\n        }\n    },\n};\n","import { JsonSafe } from './JsonSafe';\n\nexport const LocalStorageSafe = {\n    getItem<T = unknown>(key: string): T | null {\n        try {\n            const item = localStorage.getItem(key);\n            if (item === null) {\n                return item;\n            }\n            return JsonSafe.parse<T>(item);\n        } catch {\n            return null;\n        }\n    },\n\n    setItem<T = unknown>(key: string, item: T) {\n        try {\n            localStorage.setItem(key, JsonSafe.stringify(item));\n        } catch {}\n    },\n};\n","import { makeAutoObservable } from 'mobx';\n\nexport class WithLoadingFlags<Result = unknown> {\n    isLoading = true;\n    isLoaded = false;\n    hasError = false;\n    isConsumerInitialized = false;\n    updateTimeoutId: number | null = null;\n    interval = 3000;\n    // @ts-ignore\n    data: Result;\n    action: () => Promise<Result>;\n\n    constructor(action: () => Promise<Result>) {\n        this.action = action;\n        makeAutoObservable(this);\n    }\n\n    async load() {\n        try {\n            this.isLoading = true;\n            this.data = await this.action();\n            this.hasError = false;\n        } catch (error) {\n            console.error(error);\n            this.hasError = true;\n        } finally {\n            this.isLoaded = true;\n            this.isLoading = false;\n        }\n    }\n\n    async loadWithSavingState() {\n        try {\n            this.data = await this.action();\n            this.hasError = false;\n        } catch (error) {\n            console.error(error);\n            this.hasError = true;\n        } finally {\n            this.isLoaded = true;\n            this.isLoading = false;\n        }\n    }\n\n    async loadIfNotLoaded() {\n        if (!this.isLoaded) {\n            await this.load();\n        }\n    }\n\n    async addConsumer() {\n        if (this.isConsumerInitialized) {\n            return;\n        }\n\n        this.isConsumerInitialized = true;\n\n        await this.tick(this.loadWithSavingState.bind(this));\n    }\n\n    removeConsumer() {\n        this.isConsumerInitialized = false;\n        this.updateTimeoutId && window.clearTimeout(this.updateTimeoutId);\n    }\n\n    async tick(func: () => void) {\n        await func();\n\n        this.updateTimeoutId && window.clearTimeout(this.updateTimeoutId);\n\n        if (!this.isConsumerInitialized) {\n            return;\n        }\n\n        this.updateTimeoutId = window.setTimeout(() => this.tick(func), this.interval);\n    }\n}\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/Login/Login.module.css';\nimport { Form, Input, Button, message } from 'antd';\nimport { observer } from 'mobx-react-lite';\nimport { navigate, RouteComponentProps } from '@reach/router';\nimport { UserStore } from 'src/stores/User';\n\ntype Values = {\n    login: string;\n    password: string;\n};\n\nfunction _Login() {\n    useEffect(() => {\n        if (UserStore.user) {\n            navigate('/');\n        }\n    }, [UserStore.user]);\n\n    async function onFinish(values: Values) {\n        try {\n            await UserStore.login(values);\n        } catch (error) {\n            console.info(error);\n            const statusText = error.response?.statusText;\n            const errorText = error.response?.status === 401 ? 'Пользователь не найден' : statusText || error.message;\n            message.error(`Не удалось войти. ${errorText}`);\n        }\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n\n    return (\n        <div className={styles.loginWrapper}>\n            <Form {...layout} name=\"basic\" onFinish={onFinish}>\n                <Form.Item\n                    label=\"Login\"\n                    name=\"login\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите login',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Пароль\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите пароль',\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Войти\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport const Login = observer<RouteComponentProps>(_Login);\n","import React from 'react';\nimport styles from 'src/components/PageSpinner/PageSpinner.module.css';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nexport function PageSpinner() {\n    return (\n        <div className={styles.spinnerWrapper}>\n            <Spin indicator={<LoadingOutlined className={styles.indicator} spin />} />\n        </div>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\n\nfunction _NotFound() {\n    const [notFound, setNotFound] = useState(false);\n    const isMounted = useRef(false);\n\n    useEffect(() => {\n        isMounted.current = true;\n        setTimeout(() => {\n            if (isMounted.current) {\n                setNotFound(true);\n            }\n        }, 5000);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    return notFound ? <>Страница не найдена</> : <PageSpinner />;\n}\n\nexport const NotFound = observer<RouteComponentProps>(_NotFound);\n","import { Redirect, RouteComponentProps } from '@reach/router';\nimport React from 'react';\nimport { UserStore } from 'src/stores/User';\nimport { observer } from 'mobx-react-lite';\nimport { Spin } from 'antd';\n\ninterface IWrapperUser {\n    children: React.ReactElement;\n}\n\ntype TWrapperUserObserver = IWrapperUser & RouteComponentProps;\n\nfunction _WrapperUser({ children }: IWrapperUser) {\n    if (!UserStore.checkLogin) {\n        return <Spin />;\n    }\n    if (UserStore.checkLogin && !UserStore.user) {\n        return <Redirect to={'/login'} noThrow />;\n    }\n\n    return children;\n}\n\nexport const WrapperUser = observer<TWrapperUserObserver>(_WrapperUser);\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/User/User.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { UserStore } from 'src/stores/User';\nimport { Button } from 'antd';\nimport { navigate } from '@reach/router';\n\nfunction _User() {\n    const user = UserStore.user;\n    const editor = UserStore.editor;\n    const isEditorRunning = editor?.status === 'running';\n    const editorButtonMessage = isEditorRunning ? 'Остановить редактор' : 'Запустить редактор';\n    const isEditorChanging = editor?.isLoading;\n\n    useEffect(() => {\n        if (user) {\n            UserStore.editorStatus(user.id);\n        }\n    }, []);\n\n    function onLogOut() {\n        UserStore.setUser(null);\n        navigate('/');\n    }\n\n    function onStart() {\n        if (user) {\n            UserStore.startEditor(user.id);\n        }\n    }\n\n    function onStop() {\n        if (user) {\n            UserStore.stopEditor(user.id);\n        }\n    }\n\n    return (\n        <div className={styles.user}>\n            <div className={styles.email}>{user?.email}</div>\n            <Button\n                className={styles.editorButton}\n                onClick={isEditorRunning ? onStop : onStart}\n                danger={isEditorRunning}\n                loading={isEditorChanging}\n            >\n                {!isEditorChanging && editorButtonMessage}\n            </Button>\n            <Button className={styles.logOutButton} onClick={onLogOut}>\n                Выйти\n            </Button>\n        </div>\n    );\n}\n\nexport const User = observer(_User);\n","export default __webpack_public_path__ + \"static/media/logo.c8be1847.png\";","const open: typeof window.open = (...args) => {\n    const newWindow = window.open(...args);\n    if (!newWindow) {\n        return newWindow;\n    }\n    newWindow.opener = null;\n\n    return newWindow;\n};\n\nexport const WindowHelper = {\n    open,\n};\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { navigate } from '@reach/router';\n\nimport { User } from 'src/components/User/User';\n\nimport logo from 'src/components/DefaultLayout/logo.png';\nimport styles from 'src/components/DefaultLayout/DefaultLayout.module.css';\nimport { WindowHelper } from 'src/helpers/WindowHelper';\n\nconst { Header, Content, Footer } = Layout;\n\ninterface IMenuItem {\n    title: string;\n    path: string;\n}\n\ninterface IDefaultLayout {\n    children: React.ReactNode;\n    indexMenuItem: number;\n    menuItems: IMenuItem[];\n    setIndexMenuItem: (index: number) => void;\n}\n\nexport function DefaultLayout({ children, indexMenuItem, menuItems, setIndexMenuItem }: IDefaultLayout) {\n    return (\n        <Layout>\n            <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[`${indexMenuItem}`]}>\n                    <Menu.Item key=\"logo\">\n                        <img alt=\"logo\" className={styles.logo} src={logo} />\n                    </Menu.Item>\n                    {menuItems.map((item, index) => (\n                        <Menu.Item\n                            key={`${index}`}\n                            onClick={() => {\n                                setIndexMenuItem(index);\n                                const isExternalLink = item.path.startsWith('http');\n                                if (isExternalLink) {\n                                    WindowHelper.open(item.path, '_blank');\n                                } else {\n                                    navigate(`/${item.path}`);\n                                }\n                            }}\n                        >\n                            {item.title}\n                        </Menu.Item>\n                    ))}\n                    <User />\n                </Menu>\n            </Header>\n            <Content className={styles.content}>{children}</Content>\n            <Footer className={styles.footer}>Pseudocoders ©2020</Footer>\n        </Layout>\n    );\n}\n","export const ArrayHelper = {\n    clearNullable<T>(array: T[]) {\n        return array.filter(Boolean) as Exclude<T, false | undefined | null | 0 | ''>[];\n    },\n};\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { DefaultLayout } from 'src/components/DefaultLayout/DefaultLayout';\nimport { UserStore, UserType } from 'src/stores/User';\nimport { ArrayHelper } from 'src/helpers/ArrayHelper';\n\ninterface ITeacherPage {\n    path: string;\n    children: React.ReactNode;\n}\n\nfunction _TeacherPage({ path, children }: ITeacherPage) {\n    function getMenuItems() {\n        return ArrayHelper.clearNullable([\n            {\n                title: 'Задачи',\n                path: 'tasks',\n            },\n            UserStore.user?.type === UserType.teacher && {\n                title: 'Ученики',\n                path: 'students',\n            },\n            {\n                title: 'Монитор',\n                path: 'monitoring',\n            },\n            UserStore.editor?.status === 'running' && {\n                title: 'Редактор',\n                path: `http://api.pseudocoders.online:${UserStore.editor.port}`,\n            },\n        ]);\n    }\n\n    const menuItems = getMenuItems();\n    const startIndexMenuItem = menuItems.findIndex((item) => item.path === path);\n\n    if (startIndexMenuItem === -1) {\n        throw new Error('invalid path');\n    }\n\n    const [indexMenuItem, setIndexMenuItem] = useState(startIndexMenuItem);\n\n    return (\n        <DefaultLayout menuItems={menuItems} indexMenuItem={indexMenuItem} setIndexMenuItem={setIndexMenuItem}>\n            {children}\n        </DefaultLayout>\n    );\n}\n\nexport const TeacherPage = observer(_TeacherPage);\n","import axios from 'axios';\nimport slugify from 'slugify';\nimport { makeAutoObservable } from 'mobx';\n\nexport interface ILanguage {\n    name: string;\n    slug: string;\n    id: string;\n}\n\nfunction getApi() {\n    return {\n        async loadLanguages() {\n            const response = await axios.get<ILanguage[]>(`/api/languages/`);\n            return response.data;\n        },\n\n        async saveTask(data: any) {\n            const response = await axios.post(`/api/tasks/create/`, { ...data, slug: slugify(data.name) });\n            return response.status;\n        },\n    };\n}\n\nclass CreateStoreClass {\n    api = getApi();\n    languages = [];\n    saveProcess = false;\n    saveStatus = 0;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setLanguages(languages: any) {\n        this.languages = languages;\n    }\n\n    async getLanguages() {\n        const lang = await this.api.loadLanguages();\n        this.setLanguages(lang);\n    }\n\n    async saveTask(data: any) {\n        this.saveProcess = true;\n        const status = await this.api.saveTask(data);\n        this.saveProcess = false;\n        this.saveStatus = status;\n    }\n}\n\nexport const CreateStore = new CreateStoreClass();\n","import React, { useCallback } from 'react';\nimport styles from 'src/components/Create/Create.module.css';\nimport { Button, Input } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nconst { TextArea } = Input;\n\nconst TestBlock = ({ input, output, idx, onChangeTests, onDelete }: any) => {\n    const onChange = useCallback(\n        (name: 'input' | 'output') => (e: any) => {\n            onChangeTests(e.target.value, idx, name);\n        },\n        [],\n    );\n\n    return (\n        <>\n            <p className={styles.testHide}>\n                Тест {idx + 1}\n                <Button\n                    className={styles.removeButton}\n                    onClick={onDelete}\n                    icon={<DeleteOutlined />}\n                    shape=\"circle\"\n                    danger\n                />\n            </p>\n            <div className={styles.test}>\n                <div className={styles.file}>\n                    <p className={styles.fileName}>input.txt</p>\n                    <TextArea value={input} rows={4} onChange={onChange('input')} />\n                </div>\n                <div className={styles.file}>\n                    <p className={styles.fileName}>output.txt</p>\n                    <TextArea value={output} rows={4} onChange={onChange('output')} />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default TestBlock;\n","import React, { useMemo, useCallback, useEffect, useState } from 'react';\nimport styles from 'src/components/Create/Create.module.css';\nimport { CreateStore, ILanguage } from 'src/stores/Create';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\nimport ReactQuill from 'react-quill';\nimport { Input, Select, Button } from 'antd';\nimport { PlusOutlined, SaveOutlined } from '@ant-design/icons';\nimport 'react-quill/dist/quill.snow.css';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport TestBlock from './TestBlock';\n\nconst { Option } = Select;\n\nconst modules = {\n    toolbar: [\n        [{ header: [1, 2, false] }],\n        [\n            {\n                color: [\n                    '#FFFFFF',\n                    '#000000',\n                    '#3072C4',\n                    '#228007',\n                    '#CE0014',\n                    '#D97E00',\n                    '#7A1871',\n                    '#F2F2F2',\n                    '#808080',\n                    '#1D85D0',\n                    '#3F9726',\n                    '#D70C17',\n                    '#F69C00',\n                    '#B254AA',\n                ],\n            },\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'blockquote',\n        ],\n        [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n        ['link', 'image', 'code'],\n        ['clean'],\n    ],\n};\n\nconst formats = [\n    'header',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'indent',\n    'link',\n    'image',\n    'code',\n    'color',\n];\n\nconst localStorageName = 'TASK_NAME';\nconst localStorageDescription = 'TASK_DESCRIPTION';\nconst localStorageLanguages = 'TASK_LANGUAGES';\nconst localStorageTests = 'TASK_TESTS';\nconst localStorageSave = 'IS_SAVE';\n\nconst saveInLocalStorage = (name: string, value: string) => {\n    localStorage.setItem(name, JSON.stringify(value));\n};\n\nconst getLocalStorageValue = (nameLocalStorage: string, defaultValue: any = '') => {\n    const valueString = localStorage.getItem(nameLocalStorage);\n    if (valueString) {\n        return JSON.parse(valueString);\n    }\n\n    return defaultValue;\n};\n\ninterface Test {\n    input?: string;\n    output?: string;\n}\n\nexport type ChangeTests = (value: string, index: number, nameFile: 'input' | 'output') => void;\n\nfunction _Create() {\n    useEffect(() => {\n        (async () => {\n            await CreateStore.getLanguages();\n        })();\n    }, []);\n\n    const onSaveTask = useCallback(() => {\n        CreateStore.saveTask({\n            name: getLocalStorageValue(localStorageName),\n            languages: getLocalStorageValue(localStorageLanguages),\n            description: getLocalStorageValue(localStorageDescription),\n            tests: getLocalStorageValue(localStorageTests),\n        });\n        saveInLocalStorage(localStorageSave, 'on');\n    }, []);\n\n    useEffect(() => {\n        if (getLocalStorageValue(localStorageSave) === 'on') {\n            if (!CreateStore.saveProcess && CreateStore.saveStatus === 200) {\n                const keys = [\n                    localStorageName,\n                    localStorageDescription,\n                    localStorageLanguages,\n                    localStorageTests,\n                    localStorageSave,\n                ];\n                keys.forEach((key) => {\n                    localStorage.removeItem(key);\n                });\n            } else {\n                console.log('error', CreateStore.saveStatus);\n            }\n        }\n    }, [CreateStore.saveProcess, CreateStore.saveStatus]);\n\n    const [description, setDescription] = useState(getLocalStorageValue(localStorageDescription));\n\n    const [tests, setTests] = useState<Test[]>(getLocalStorageValue(localStorageTests, [{ input: '', output: '' }]));\n\n    const [name, setName] = useState(getLocalStorageValue(localStorageName));\n\n    const [languages, setLanguages] = useState(getLocalStorageValue(localStorageLanguages, []));\n\n    const debouncedSaveInLocalStorage = useDebouncedCallback((nameVariable, value) => {\n        saveInLocalStorage(nameVariable, value);\n    }, 300);\n\n    const onChangeName = useCallback(\n        (e) => {\n            const value = e.target.value;\n            setName(value);\n            debouncedSaveInLocalStorage.callback(localStorageName, value);\n        },\n        [setName],\n    );\n\n    const onChangeDescription = useCallback(\n        (value) => {\n            setDescription(value);\n            debouncedSaveInLocalStorage.callback(localStorageDescription, value);\n        },\n        [setDescription],\n    );\n\n    const onChangeLanguages = useCallback((value) => {\n        setLanguages(value);\n        debouncedSaveInLocalStorage.callback(localStorageLanguages, value);\n    }, []);\n\n    const onChangeTests: ChangeTests = useCallback(\n        (value: string, index: number, nameFile: 'input' | 'output') => {\n            const newTests = [...tests];\n            newTests[index][nameFile] = value;\n\n            setTests(newTests);\n            debouncedSaveInLocalStorage.callback(localStorageTests, newTests);\n        },\n        [tests],\n    );\n\n    const addTest = useCallback(() => {\n        setTests([...tests, { input: '', output: '' }]);\n    }, [setTests, tests]);\n\n    const removeTest = (idx: number) => {\n        return () => {\n            const newTests = tests.filter((_, i) => i !== idx);\n            setTests(newTests);\n            debouncedSaveInLocalStorage.callback(localStorageTests, newTests);\n        };\n    };\n\n    const tagsLanguages = useMemo(\n        () =>\n            CreateStore.languages.map((language: ILanguage) => (\n                <Option value={language.slug} key={language.slug}>\n                    {language.name}\n                </Option>\n            )),\n        [CreateStore.languages],\n    );\n\n    return (\n        <div className={styles.createTask}>\n            <div className={styles.container}>\n                <h1 className={styles.title}>Создание задачи</h1>\n                <p className={styles.description}>\n                    Добавьте заголовок и описание задачи. Для красочности вы можете использовать разные цвета, добавлять\n                    картинки, списки и код.\n                </p>\n                {\n                    <div className={styles.languges}>\n                        <div className={styles.langugesTitle}>ЯЗЫКИ ПРОГРАММИРОВАНИЯ</div>\n                        <Select\n                            className={styles.selectLanguages}\n                            mode=\"tags\"\n                            size=\"middle\"\n                            placeholder=\"Please select\"\n                            defaultValue={languages}\n                            onChange={onChangeLanguages}\n                            style={{ minWidth: '200px' }}\n                        >\n                            {tagsLanguages}\n                        </Select>\n                    </div>\n                }\n                <div style={{ marginBottom: 16 }}>\n                    <Input\n                        value={name}\n                        onChange={onChangeName}\n                        addonBefore=\"НАЗВАНИЕ ЗАДАЧИ\"\n                        placeholder=\"Бифштексы...\"\n                    />\n                </div>\n                <div className=\"text-editor\">\n                    <ReactQuill\n                        theme=\"snow\"\n                        modules={modules}\n                        formats={formats}\n                        value={description}\n                        onChange={onChangeDescription}\n                    />\n                </div>\n                {(description || name) && (\n                    <div className={styles.preview}>\n                        <h3 className={styles.paragraph}>Предпросмотр</h3>\n                        <h2>{name}</h2>\n                        <div\n                            style={{ padding: 0 }}\n                            className=\"ql-editor\"\n                            dangerouslySetInnerHTML={{ __html: description }}\n                        />\n                    </div>\n                )}\n\n                <h3 className={styles.paragraph}>Добавить тесты</h3>\n                {tests.map((item: Test, idx: number) => (\n                    <TestBlock key={idx} idx={idx} {...item} onChangeTests={onChangeTests} onDelete={removeTest(idx)} />\n                ))}\n                <Button className={styles.addButton} onClick={addTest} icon={<PlusOutlined />}>\n                    Добавить тест\n                </Button>\n                <div className={styles.saveButtonBlock}>\n                    <Button type=\"primary\" onClick={onSaveTask} icon={<SaveOutlined />}>\n                        Сохранить задачу\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport const Create = observer<RouteComponentProps>(_Create);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { Create } from './Create';\n\nfunction _TeacherCreateTask() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"tasks\">\n                <Create />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherCreateTask = observer<RouteComponentProps>(_TeacherCreateTask);\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport axios from 'axios';\nimport { makeAutoObservable } from 'mobx';\n\ntype CreateGroupData = Omit<Group, 'id'>;\ntype EditGroupData = Partial<Omit<Group, 'id'>>;\n\nfunction getApi() {\n    return {\n        async loadList() {\n            const res = await axios.get<Group[]>('api/groups/');\n            return res.data;\n        },\n        async createGroup(data: CreateGroupData) {\n            const res = await axios.post('api/groups/', data);\n            return res.data;\n        },\n        async editGroup(id: number, data: EditGroupData) {\n            const res = await axios.patch(`api/groups/${id}/`, data);\n            return res.data;\n        },\n    };\n}\n\nexport type Group = {\n    id: number;\n    name: string;\n    owner: number;\n    slug: string;\n    tasks: number[];\n    users: number[];\n};\nclass GroupStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags(this.api.loadList);\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    async createGroup(data: CreateGroupData) {\n        this.isLoading = true;\n        const group = await this.api.createGroup(data);\n        await this.list.loadWithSavingState();\n        this.isLoading = false;\n        return group;\n    }\n\n    async editGroup(id: number, data: EditGroupData) {\n        this.isLoading = true;\n        const group = await this.api.editGroup(id, data);\n        await this.list.loadWithSavingState();\n        this.isLoading = false;\n        return group;\n    }\n}\n\nexport const GroupStore = new GroupStoreClass();\n","import { makeAutoObservable } from 'mobx';\nimport { ILanguage } from './Create';\nimport axios from 'axios';\nimport { WithLoadingFlags } from 'src/helpers/StoreHelper';\n\ninterface IAuthor {\n    id: number;\n    login: string;\n    last_name: string;\n    first_name: string;\n}\n\ninterface ITest {\n    input: string;\n    output: string;\n}\n\nexport type ITask = {\n    id: number;\n    author: IAuthor;\n    languages: ILanguage[];\n    name: string;\n    description: string;\n    slug: string;\n    tests: ITest[];\n    verdict?: string;\n};\n\nexport type SimpleTask = Pick<ITask, 'id' | 'name' | 'slug'>;\n\nfunction getApi() {\n    return {\n        async loadTask(slug: string) {\n            const response = await axios.get<ITask>(`/api/tasks/${slug}`);\n            return response.data;\n        },\n        async loadList() {\n            const res = await axios.get<ITask[]>('/api/tasks/');\n\n            return res.data;\n        },\n        async loadListByUser(user_id: number) {\n            const res = await axios.get<ITask[]>(`/api/users/${user_id}/tasks/`);\n\n            return res.data;\n        },\n        async sendTask(userId: string, taskId: string, lang: string) {\n            await axios.post<ITask[]>(`/tasks/verify/user/${userId}/task/${taskId}/language/${lang}`);\n        },\n    };\n}\n\nclass TaskStoreClass {\n    api = getApi();\n    task: ITask | null = null;\n    listUser: ITask[] | null = null;\n    list = new WithLoadingFlags<ITask[]>(this.api.loadList);\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    async getTask(id: string) {\n        const task = await this.api.loadTask(id);\n        this.task = task;\n    }\n\n    async getListByUser(user_id: number) {\n        const listUser = await this.api.loadListByUser(user_id);\n        this.listUser = listUser;\n    }\n\n    async sendTask(userId: string, taskId: string, lang: string) {\n        await this.api.sendTask(userId, taskId, lang);\n    }\n}\n\nexport const TaskStore = new TaskStoreClass();\n","import React, { useEffect, useRef, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Group, GroupStore } from 'src/components/TeacherPage/TeacherStudents/GroupStore';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\nimport styles from './GroupsPage.module.css';\nimport { Form, List, Select, PageHeader, Button, Modal, Input, message } from 'antd';\nimport { UserStore, UserUtils } from 'src/stores/User';\nimport { TaskStore } from 'src/stores/Task';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nconst { Option } = Select;\n\ntype Values = {\n    name: string;\n    studentIds: number[];\n    taskIds: number[];\n};\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction _GroupsPage() {\n    const localStorageCurrentGroupKey = 'currentGroupId';\n    const [currentGroup, setCurrentGroup] = useState<Group>();\n    const [visibleCreateGroupModal, setVisibleCreateGroupModal] = useState(false);\n    const [visibleEditGroupModal, setVisibleEditGroupModal] = useState(false);\n    const isEditMode = visibleEditGroupModal;\n    const isMounted = useRef(false);\n\n    useEffect(() => {\n        isMounted.current = true;\n        waitDefaultGroup();\n\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    async function waitDefaultGroup() {\n        const currentGroupId = LocalStorageSafe.getItem<number>(localStorageCurrentGroupKey);\n        let currentGroup = GroupStore.list.data?.find((group) => group.id === currentGroupId);\n        currentGroup && setCurrentGroup(currentGroup);\n        await GroupStore.list.loadWithSavingState();\n        await UserStore.list.loadWithSavingState();\n        await TaskStore.list.loadWithSavingState();\n        if (!currentGroup) {\n            currentGroup = currentGroupId\n                ? GroupStore.list.data.find((group) => group.id === currentGroupId)\n                : GroupStore.list.data?.[0];\n        }\n        isMounted.current && setCurrentGroup(currentGroup);\n    }\n\n    if (GroupStore.list.isLoading || UserStore.list.isLoading || TaskStore.list.isLoading || !currentGroup) {\n        return <PageSpinner />;\n    }\n\n    if (GroupStore.list.hasError) {\n        return <>Группы недоступны</>;\n    }\n\n    function renderDropdownGroups() {\n        const options = GroupStore.list.data.map((group) => {\n            return (\n                <Option key={group.id} value={group.id}>\n                    {group.name}\n                </Option>\n            );\n        });\n        return (\n            <Form.Item label=\"Группа учеников\">\n                <Select value={currentGroup?.id} style={{ width: 300 }} onChange={handleChange}>\n                    {options}\n                </Select>\n            </Form.Item>\n        );\n    }\n\n    function handleChange(value: number) {\n        const curGroup = GroupStore.list.data.find((group) => group.id === value);\n        setCurrentGroup(curGroup);\n        LocalStorageSafe.setItem(localStorageCurrentGroupKey, curGroup?.id);\n    }\n\n    async function onCreate(values: Values) {\n        const { name, studentIds, taskIds } = values;\n        try {\n            let group = null;\n            if (isEditMode) {\n                group = await GroupStore.editGroup(currentGroup!.id, {\n                    name,\n                    users: studentIds,\n                    tasks: taskIds,\n                });\n            } else {\n                group = await GroupStore.createGroup({\n                    name,\n                    users: studentIds,\n                    tasks: taskIds,\n                    owner: UserStore.user!.id,\n                    slug: name + Math.random(),\n                });\n            }\n            setVisibleCreateGroupModal(false);\n            setVisibleEditGroupModal(false);\n            group && setCurrentGroup(group);\n\n            const successText = isEditMode ? `Группа ${name} успешно изменена!` : `Группа ${name} успешно создана!`;\n            message.success(successText);\n        } catch (error) {\n            console.info(error);\n            const statusText = error.response?.statusText;\n            const errorText = error.response?.status === 401 ? 'Пользователь не найден' : statusText || error.message;\n            message.error(`Не удалось ${isEditMode ? 'изменить' : 'создать'} группу. ${errorText}`);\n        }\n    }\n\n    function onCancel() {\n        setVisibleCreateGroupModal(false);\n        setVisibleEditGroupModal(false);\n    }\n\n    function renderCreateGroupModal() {\n        const title = isEditMode ? `Редактирование группы ${currentGroup?.name}` : 'Создание группы';\n        const initialValues: Values | undefined =\n            isEditMode && currentGroup\n                ? {\n                      name: currentGroup.name,\n                      taskIds: currentGroup.tasks,\n                      studentIds: currentGroup.users,\n                  }\n                : undefined;\n\n        return (\n            <Modal\n                onCancel={onCancel}\n                title={title}\n                footer={null}\n                visible={visibleCreateGroupModal || visibleEditGroupModal}\n                destroyOnClose\n            >\n                <Form name=\"basic\" initialValues={initialValues} onFinish={onCreate}>\n                    <Form.Item\n                        label=\"Имя группы\"\n                        name=\"name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Введите имя группы',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"studentIds\"\n                        label=\"Ученики\"\n                        rules={[{ required: true, message: 'Выберите хотя бы одного ученика' }]}\n                    >\n                        <Select placeholder=\"Выберите учеников\" mode=\"multiple\">\n                            {UserStore.list.data.map((user) => (\n                                <Option key={user.id} value={user.id}>\n                                    {UserUtils.getFullName(user)}\n                                </Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"taskIds\"\n                        label=\"Задачи\"\n                        rules={[{ required: true, message: 'Выберите хотя бы одну задачу' }]}\n                    >\n                        <Select placeholder=\"Выберите задачи\" mode=\"multiple\">\n                            {TaskStore.list.data.map((task) => (\n                                <Option key={task.id} value={task.id}>\n                                    {task.name}\n                                </Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <div className={styles.footer}>\n                        <Form.Item>\n                            <Button loading={GroupStore.isLoading} type=\"primary\" htmlType=\"submit\">\n                                {isEditMode ? 'Сохранить' : 'Создать'}\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button onClick={onCancel}>Отмена</Button>\n                        </Form.Item>\n                    </div>\n                </Form>\n            </Modal>\n        );\n    }\n\n    return (\n        <div className={styles.groups}>\n            {renderCreateGroupModal()}\n            <div className={styles.subHeader}>\n                {renderDropdownGroups()}\n                <Button onClick={() => setVisibleEditGroupModal(true)}>Редактировать группу</Button>\n                <Button type=\"primary\" onClick={() => setVisibleCreateGroupModal(true)}>\n                    Создать группу\n                </Button>\n            </div>\n            <div className={styles.studentsAndTasks}>\n                <List\n                    locale={{\n                        emptyText: 'В этой группе нет учеников',\n                    }}\n                    header={<PageHeader title=\"Список учеников в группе\" />}\n                    className={styles.students}\n                    itemLayout=\"horizontal\"\n                    dataSource={UserStore.list.data.filter((user) => currentGroup.users.includes(user.id))}\n                    renderItem={(user) => <List.Item>{UserUtils.getFullName(user)}</List.Item>}\n                />\n                <List\n                    locale={{\n                        emptyText: 'В этой группе нет задач',\n                    }}\n                    header={<PageHeader title=\"Задачи в группе\" />}\n                    className={styles.tasks}\n                    itemLayout=\"horizontal\"\n                    dataSource={TaskStore.list.data.filter((task) => currentGroup.tasks.includes(task.id))}\n                    renderItem={(task) => <List.Item>{task.name}</List.Item>}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport const GroupsPage = observer(_GroupsPage);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { GroupsPage } from 'src/components/TeacherPage/TeacherStudents/GroupsPage';\n\nfunction _TeacherStudents() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"students\">\n                <GroupsPage />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherStudents = observer<RouteComponentProps>(_TeacherStudents);\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport axios from 'axios';\nimport { SimpleUser, UserStore } from 'src/stores/User';\nimport { SimpleTask } from 'src/stores/Task';\n\nfunction getApi() {\n    return {\n        async loadList(userId: number): Promise<MonitorData[]> {\n            const res = await axios.get<MonitorData[]>(`api/users/${userId}/task_checks/`);\n            return res.data.sort((md1, md2) => md2.date - md1.date);\n        },\n    };\n}\n\nexport enum TaskStatus {\n    running = 'running',\n    stopped = 'stopped',\n    ce = 'ce',\n    re = 're',\n    tle = 'tle',\n    wa = 'wa',\n    ok = 'ok',\n}\ntype Language = {\n    id: number;\n    name: string;\n    slug: string;\n};\n\nexport type MonitorData = {\n    date: number;\n    id: number;\n    language: Language;\n    passed_tests_count: number;\n    status: TaskStatus;\n    task: SimpleTask;\n    task_author: SimpleUser;\n    tests_count: number;\n    user: SimpleUser;\n};\nclass MonitorStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags<MonitorData[]>(() => this.api.loadList(UserStore.user!.id));\n}\n\nexport const MonitorStore = new MonitorStoreClass();\n","import { RouteComponentProps } from '@reach/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from 'src/components/CommonMonitor/MonitorPage.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { Button, Input, Progress, Space, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { MonitorStore, TaskStatus } from 'src/components/CommonMonitor/MonitorStore';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\nimport { UserStore, UserType, UserUtils } from 'src/stores/User';\nimport { ArrayHelper } from 'src/helpers/ArrayHelper';\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction _MonitorPage() {\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchColumn] = useState<keyof RecordType | ''>('');\n    const searchInput = useRef() as React.MutableRefObject<Input | null>;\n    const isTeacher = UserStore.user?.type === UserType.teacher;\n\n    useEffect(() => {\n        MonitorStore.list.addConsumer();\n\n        return () => {\n            MonitorStore.list.removeConsumer();\n        };\n    }, []);\n\n    if (MonitorStore.list.isLoading) {\n        return <PageSpinner />;\n    }\n\n    if (MonitorStore.list.hasError) {\n        return <>Монитор недоступен</>;\n    }\n\n    function getStringSorter(key: keyof RecordType) {\n        return (data1: RecordType, data2: RecordType) => String(data1[key]).localeCompare(String(data2[key]));\n    }\n\n    function getColumns(): ColumnsType<RecordType> {\n        return ArrayHelper.clearNullable([\n            {\n                title: 'Дата',\n                dataIndex: 'date',\n                sorter: (data1, data2) => Number(data1.dateObj) - Number(data2.dateObj),\n            },\n            isTeacher\n                ? {\n                      title: 'Ученик',\n                      dataIndex: 'userName',\n                      sorter: getStringSorter('userName'),\n                      ...getColumnSearchProps('userName'),\n                  }\n                : {\n                      title: 'Автор задачи',\n                      dataIndex: 'userName',\n                      sorter: getStringSorter('userName'),\n                      ...getColumnSearchProps('userName'),\n                  },\n            {\n                title: 'Задача',\n                dataIndex: 'taskName',\n                sorter: getStringSorter('taskName'),\n                ...getColumnSearchProps('taskName'),\n            },\n            {\n                title: 'Язык',\n                dataIndex: 'language',\n                sorter: getStringSorter('language'),\n                ...getColumnSearchProps('language'),\n            },\n            {\n                title: 'Результат',\n                dataIndex: 'status',\n            },\n            {\n                title: 'Количество пройденных тестов',\n                dataIndex: 'testCount',\n            },\n        ]);\n    }\n\n    function getDataSource() {\n        return MonitorStore.list.data.map(\n            ({ date, user, task, task_author, language, id, passed_tests_count, tests_count, status }) => {\n                const dateObj = new Date(date);\n                const percent = Math.round((passed_tests_count * 100) / tests_count);\n\n                return {\n                    key: id,\n                    dateObj,\n                    date: `${dateObj.toLocaleDateString()} ${dateObj.toLocaleTimeString()}`,\n                    userName: UserUtils.getFullName(isTeacher ? user : task_author),\n                    taskName: task.name,\n                    language: language.name,\n                    testCount: `${passed_tests_count}/${tests_count}`,\n                    status: (\n                        <div className={styles.status}>\n                            <div className={styles[status]}>{status}</div>\n                            <Progress\n                                type=\"circle\"\n                                width={30}\n                                percent={percent}\n                                status={getStatusString(percent, status)}\n                            />\n                        </div>\n                    ),\n                };\n            },\n        );\n    }\n\n    function getStatusString(percent: number, status: TaskStatus) {\n        if (percent < 100 && status !== TaskStatus.running) {\n            return 'exception';\n        }\n\n        if (percent === 100) {\n            return 'success';\n        }\n\n        return 'active';\n    }\n\n    function getColumnSearchProps(dataIndex: keyof RecordType) {\n        return {\n            filterDropdown({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) {\n                return (\n                    <div style={{ padding: 8 }}>\n                        <Input\n                            ref={searchInput}\n                            placeholder={`Поиск по ${dataIndex}`}\n                            value={selectedKeys[0]}\n                            onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                            className={styles.searchInput}\n                        />\n                        <Space>\n                            <Button\n                                type=\"primary\"\n                                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                                icon={<SearchOutlined />}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Поиск\n                            </Button>\n                            <Button\n                                onClick={() => handleReset(clearFilters)}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Сбросить\n                            </Button>\n                        </Space>\n                    </div>\n                );\n            },\n            filterIcon(filtered: boolean) {\n                return <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />;\n            },\n            onFilter: (value: any, record: any) =>\n                record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n            onFilterDropdownVisibleChange: (visible: boolean) => {\n                if (visible) {\n                    setTimeout(() => searchInput.current?.select(), 100);\n                }\n            },\n            render(text: string) {\n                return searchedColumn === dataIndex ? (\n                    <Highlighter\n                        highlightClassName={styles.highlight}\n                        searchWords={[searchText]}\n                        autoEscape\n                        textToHighlight={text ? text.toString() : ''}\n                    />\n                ) : (\n                    text\n                );\n            },\n        };\n    }\n\n    function handleSearch(selectedKeys: string[], confirm: () => void, dataIndex: keyof RecordType) {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchColumn(dataIndex);\n    }\n\n    function handleReset(clearFilters: () => void) {\n        clearFilters();\n        setSearchText('');\n    }\n\n    type RecordType = ReturnType<typeof getDataSource>[number];\n\n    return (\n        <div className={styles.courses}>\n            <Table<RecordType>\n                locale={{\n                    emptyText: isTeacher ? 'Ученики еще не отправляли решения' : 'Вы еще не отправляли решения',\n                }}\n                dataSource={getDataSource()}\n                columns={getColumns()}\n            />\n        </div>\n    );\n}\n\nexport const MonitorPage = observer<RouteComponentProps>(_MonitorPage);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { MonitorPage } from './MonitorPage';\n\nfunction _CommonMonitor() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"monitoring\">\n                <MonitorPage />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const CommonMonitor = observer<RouteComponentProps>(_CommonMonitor);\n","import { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\nimport styles from 'src/components/Task/Task.module.css';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { UserStore, UserType } from 'src/stores/User';\nimport { RouteComponentProps } from '@reach/router';\nimport { TaskStore } from 'src/stores/Task';\nimport { observer } from 'mobx-react-lite';\nimport 'react-quill/dist/quill.snow.css';\nimport { Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nfunction _TaskPage({ slug }: any) {\n    const port = UserStore.editor?.port;\n    const login = UserStore.user?.login;\n    const [lang, setLanguage] = useState('');\n\n    useEffect(() => {\n        (async () => {\n            await TaskStore.getTask(slug);\n        })();\n    }, []);\n\n    const handleSendTask = useCallback(() => {\n        console.log('lang', lang);\n        (async () => {\n            // @ts-ignore;\n            await TaskStore.sendTask(UserStore.user?.id, TaskStore.task.id, lang);\n        })();\n    }, [lang, UserStore.user, TaskStore.task]);\n\n    const role = UserStore.user?.type;\n    const Component = TeacherPage;\n\n    const tagsLanguages = useMemo(\n        () =>\n            TaskStore.task?.languages.map((language) => (\n                <Option value={language.id} key={language.id}>\n                    {language.name}\n                </Option>\n            )),\n        [TaskStore.task],\n    );\n\n    return (\n        <Component path=\"tasks\">\n            {TaskStore.task ? (\n                <div className={styles.container}>\n                    {TaskStore.task.name && <h1 className={styles.title}>{TaskStore.task.name}</h1>}\n                    <div className={styles.authorBlock}>\n                        {TaskStore.task.author && (\n                            <p className={styles.author}>\n                                {TaskStore.task.author.first_name} {TaskStore.task.author.first_name} (\n                                {TaskStore.task.author.login})\n                            </p>\n                        )}\n                        {TaskStore.task.languages && (\n                            <div className={styles.languages}>\n                                {TaskStore.task.languages.map((lang, idx) => (\n                                    <div className={styles.languageItem} key={idx}>\n                                        {lang.name}\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                    {TaskStore.task.description && (\n                        <div\n                            style={{ padding: '30px 0' }}\n                            className=\"ql-editor\"\n                            dangerouslySetInnerHTML={{ __html: TaskStore.task.description }}\n                        />\n                    )}\n                    {TaskStore.task.tests && (\n                        <>\n                            <p className={styles.paragraph}>ПРИМЕРЫ ТЕСТОВ:</p>\n                            {TaskStore.task.tests.map(({ input, output }, idx) => (\n                                <React.Fragment key={idx}>\n                                    <p className={styles.testName}>Test {idx + 1}</p>\n                                    <div className={styles.test}>\n                                        <div className={styles.file}>\n                                            <p className={styles.fileTitle}>input.txt</p>\n                                            <div\n                                                className={styles.fileContent}\n                                                dangerouslySetInnerHTML={{ __html: input }}\n                                            />\n                                        </div>\n                                        <div className={styles.file}>\n                                            <p className={styles.fileTitle}>output.txt</p>\n                                            <div\n                                                className={styles.fileContent}\n                                                dangerouslySetInnerHTML={{ __html: output }}\n                                            />\n                                        </div>\n                                    </div>\n                                </React.Fragment>\n                            ))}\n                        </>\n                    )}\n                    <div className={styles.buttonBlock}>\n                        {role === UserType.student ? (\n                            <>\n                                <div>\n                                    <Button\n                                        href=\"/monitoring\"\n                                        onClick={handleSendTask}\n                                        disabled={!UserStore.user?.id || !lang || !TaskStore.task.id}\n                                        type=\"primary\"\n                                    >\n                                        Сдать задачу\n                                    </Button>\n                                    <Select className={styles.selectLang} onChange={setLanguage} defaultValue=\"\">\n                                        {tagsLanguages}\n                                    </Select>\n                                </div>\n                                <Button\n                                    className={styles.buttonEditor}\n                                    disabled={!(port && login)}\n                                    href={`http://api.pseudocoders.online:${port}/?folder=/home/${login}/project/${slug}`}\n                                    type=\"primary\"\n                                >\n                                    Открыть редактор кода\n                                </Button>\n                            </>\n                        ) : (\n                            <Button href={`task/${slug}/edit`} type=\"primary\">\n                                Редактировать задачу\n                            </Button>\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <PageSpinner />\n            )}\n        </Component>\n    );\n}\n\nexport const Task = observer<RouteComponentProps>(_TaskPage);\n","import React, { useEffect, useState, useRef } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps, Link } from '@reach/router';\nimport { ColumnsType } from 'antd/lib/table';\nimport { Button, Input, Space, Table } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { UserStore, UserType, UserUtils } from 'src/stores/User';\nimport { ITask, TaskStore } from 'src/stores/Task';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\nimport { ArrayHelper } from 'src/helpers/ArrayHelper';\nimport styles from 'src/components/CommonTasks/TasksPage.module.css';\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction _TasksPage() {\n    const user = UserStore.user;\n    useEffect(() => {\n        (async () => {\n            if (user) {\n                await TaskStore.getListByUser(UserStore.user?.id as number);\n            }\n        })();\n    }, [user]);\n\n    const tasks = TaskStore.listUser;\n\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchColumn] = useState<keyof RecordType | ''>('');\n    const searchInput = useRef() as React.MutableRefObject<Input | null>;\n\n    function getStringSorter(key: keyof RecordType) {\n        return (data1: RecordType, data2: RecordType) => String(data1[key]).localeCompare(String(data2[key]));\n    }\n\n    function getColumns(): ColumnsType<RecordType> {\n        const array = [\n            {\n                title: 'Задача',\n                dataIndex: 'name',\n            },\n            UserStore.user?.type === UserType.student && {\n                title: 'Автор задачи',\n                dataIndex: 'author',\n                sorter: getStringSorter('author'),\n                ...getColumnSearchProps('author'),\n            },\n            {\n                title: 'Языки',\n                dataIndex: 'languages',\n                sorter: getStringSorter('languages'),\n                ...getColumnSearchProps('languages'),\n            },\n            UserStore.user?.type === UserType.student && {\n                title: 'Вердикт',\n                dataIndex: 'verdict',\n                sorter: getStringSorter('verdict'),\n                ...getColumnSearchProps('verdict'),\n            },\n        ].filter(Boolean);\n\n        return ArrayHelper.clearNullable(array);\n    }\n\n    function calculateVerdict(verdict: any) {\n        if (verdict) {\n            return verdict;\n        }\n\n        return 'no solution';\n    }\n\n    function getDataSource() {\n        return (tasks as ITask[]).map(({ author, languages, name, slug, verdict }) => {\n            const prepareVerdict = user?.type === UserType.teacher ? undefined : <div>{calculateVerdict(verdict)}</div>;\n\n            return {\n                author: UserUtils.getFullName(author),\n                name: <Link to={`/task/${slug}`}>{name}</Link>,\n                languages: languages.map((language) => language.name).join(' '),\n                verdict: prepareVerdict,\n            };\n        });\n    }\n\n    function getColumnSearchProps(dataIndex: keyof RecordType) {\n        return {\n            filterDropdown({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) {\n                return (\n                    <div style={{ padding: 8 }}>\n                        <Input\n                            ref={searchInput}\n                            placeholder={`Поиск по ${dataIndex}`}\n                            value={selectedKeys[0]}\n                            onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                            className={styles.searchInput}\n                        />\n                        <Space>\n                            <Button\n                                type=\"primary\"\n                                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                                icon={<SearchOutlined />}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Поиск\n                            </Button>\n                            <Button\n                                onClick={() => handleReset(clearFilters)}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Сбросить\n                            </Button>\n                        </Space>\n                    </div>\n                );\n            },\n            filterIcon(filtered: boolean) {\n                return <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />;\n            },\n            onFilter: (value: any, record: any) =>\n                record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n            onFilterDropdownVisibleChange: (visible: boolean) => {\n                if (visible) {\n                    setTimeout(() => searchInput.current?.select(), 100);\n                }\n            },\n            render(text: string) {\n                return searchedColumn === dataIndex ? (\n                    <Highlighter\n                        highlightClassName={styles.highlight}\n                        searchWords={[searchText]}\n                        autoEscape\n                        textToHighlight={text ? text.toString() : ''}\n                    />\n                ) : (\n                    text\n                );\n            },\n        };\n    }\n\n    function handleSearch(selectedKeys: string[], confirm: () => void, dataIndex: keyof RecordType) {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchColumn(dataIndex);\n    }\n\n    function handleReset(clearFilters: () => void) {\n        clearFilters();\n        setSearchText('');\n    }\n\n    type RecordType = ReturnType<typeof getDataSource>[number];\n\n    if (!tasks) {\n        return <PageSpinner />;\n    }\n\n    return (\n        <div>\n            <Table<RecordType>\n                locale={{\n                    emptyText: 'пустой список',\n                }}\n                dataSource={getDataSource()}\n                columns={getColumns()}\n            />\n        </div>\n    );\n}\n\nexport const TasksPage = observer<RouteComponentProps>(_TasksPage);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { TasksPage } from './TasksPage';\n\nfunction _CommonTasks() {\n    // const role = UserStore.user?.type;\n    // const Component = role === UserType.teacher ? TeacherPage : StudentPage;\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"tasks\">\n                <TasksPage />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const CommonTasks = observer<RouteComponentProps>(_CommonTasks);\n","import React, { useEffect } from 'react';\nimport styles from 'src/App.module.css';\nimport 'src/App.css';\nimport { navigate, Router, RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { Login } from 'src/components/Login/Login';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nimport { IUser, UserStore, UserType } from 'src/stores/User';\nimport { NotFound } from 'src/components/NotFound/NotFound';\nimport { TeacherCreateTask } from 'src/components/Create';\nimport { TeacherStudents } from 'src/components/TeacherPage/TeacherStudents/TeacherStudents';\nimport { CommonMonitor } from 'src/components/CommonMonitor/CommonMonitor';\nimport { Task } from 'src/components/Task/Task';\nimport { CommonTasks } from 'src/components/CommonTasks/CommonTasks';\n\nfunction _App() {\n    useEffect(() => {\n        const user = LocalStorageSafe.getItem<IUser>('user');\n        if (!user) {\n            navigate('/login');\n        } else {\n            UserStore.setUser(user);\n        }\n\n        UserStore.setCheckLogin();\n    }, []);\n\n    return (\n        <div className={styles.app}>\n            <Router className={styles.router}>\n                {UserStore.user?.type === UserType.teacher && (\n                    <>\n                        <TeacherCreateTask path=\"/create\" />\n                        <TeacherStudents path=\"/students\" />\n                    </>\n                )}\n                <CommonMonitor path=\"/monitoring\" />\n                <CommonTasks path=\"/\" />\n                <CommonTasks path=\"/tasks\" />\n                <Login path=\"/login\" />\n                <Task path=\"/task/:slug\" />\n                <NotFound default />\n            </Router>\n        </div>\n    );\n}\n\nconst App = observer<RouteComponentProps>(_App);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { configure } from 'mobx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css';\nimport App from '../src/App';\nimport reportWebVitals from '../src/reportWebVitals';\nimport axios from 'axios';\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconfigure({\n    reactionScheduler(f) {\n        setTimeout(f); // https://habr.com/ru/company/mailru/blog/522312/#comment_22162136\n    },\n    enforceActions: 'never',\n});\n\naxios.defaults.baseURL = 'https://api.pseudocoders.online/';\n\nfunction renderApp() {\n    ReactDOM.render(<App />, document.querySelector('#root'));\n}\n\nrenderApp();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monitorPage\":\"MonitorPage_monitorPage__3Swvy\",\"searchInput\":\"MonitorPage_searchInput__2zUrS\",\"searchButton\":\"MonitorPage_searchButton__9755l\",\"highlight\":\"MonitorPage_highlight__2HHpn\",\"status\":\"MonitorPage_status__1t-Hc\",\"running\":\"MonitorPage_running__3B_bI\",\"stopped\":\"MonitorPage_stopped__2ciuC\",\"ce\":\"MonitorPage_ce__lzXwx\",\"re\":\"MonitorPage_re__1d08p\",\"tle\":\"MonitorPage_tle__2tGX7\",\"wa\":\"MonitorPage_wa__2Avzh\",\"ok\":\"MonitorPage_ok__2MvUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"GroupsPage_groups__LjNlr\",\"studentsAndTasks\":\"GroupsPage_studentsAndTasks__2zGq8\",\"subHeader\":\"GroupsPage_subHeader__2qgjy\",\"footer\":\"GroupsPage_footer__3XtVy\"};"],"sourceRoot":""}