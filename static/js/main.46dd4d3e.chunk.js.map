{"version":3,"sources":["components/User/User.module.css","components/DefaultLayout/DefaultLayout.module.css","App.module.css","components/PageSpinner/PageSpinner.module.css","components/Login/Login.module.css","components/Create/Create.module.css","stores/User.ts","helpers/JsonSafe.ts","helpers/LocalStorageSafe.ts","components/Login/Login.tsx","components/NotFound/NotFound.tsx","components/WrapperUser/WrapperUser.tsx","components/User/User.tsx","components/DefaultLayout/logo.png","components/DefaultLayout/DefaultLayout.tsx","components/TeacherPage/TeacherPage.tsx","stores/Create.ts","components/Create/TestBlock.tsx","components/Create/Create.tsx","components/Create/index.tsx","components/TeacherPage/TeacherTasks/TeacherTasks.tsx","components/TeacherPage/TeacherStudents/TeacherStudents.tsx","components/TeacherPage/TeacherMonitor/MonitorStore.ts","helpers/StoreHelper.ts","components/PageSpinner/PageSpinner.tsx","components/TeacherPage/TeacherMonitor/MonitorPage.tsx","components/TeacherPage/TeacherMonitor/TeacherMonitor.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/TeacherPage/TeacherMonitor/MonitorPage.module.css"],"names":["module","exports","UserType","JsonSafe","text","reviver","JSON","parse","value","replacer","space","stringify","LocalStorageSafe","key","item","localStorage","getItem","setItem","sleep","ms","Promise","resolve","setTimeout","UserStore","api","login","password","axios","post","res","data","editorStatus","userId","get","startEditor","status","stopEditor","checkLogin","user","editor","makeAutoObservable","this","setUser","setEditor","isLoading","Login","observer","values","a","console","info","statusText","response","errorText","message","error","useEffect","navigate","className","styles","loginWrapper","labelCol","span","wrapperCol","name","onFinish","Item","label","rules","required","Password","offset","type","htmlType","NotFound","WrapperUser","children","to","noThrow","User","isEditorRunning","editorButtonMessage","isEditorChanging","id","email","editorButton","onClick","danger","logOutButton","Header","Layout","Content","Footer","DefaultLayout","indexMenuItem","menuItems","setIndexMenuItem","theme","mode","defaultSelectedKeys","alt","logo","src","map","index","path","title","content","footer","TeacherPage","extMenuItems","Array","from","push","port","startIndexMenuItem","findIndex","Error","useState","HOST_API","CreateStore","loadLanguages","fetch","method","ok","json","saveTask","log","body","languages","saveProcess","saveStatus","lang","setLanguages","TextArea","Input","TestBlock","input","output","idx","onChangeTests","onDelete","onChange","useCallback","e","target","testHide","removeButton","icon","CloseOutlined","shape","test","file","fileName","rows","Option","Select","modules","toolbar","header","color","list","indent","formats","localStorageName","localStorageDescription","localStorageLanguages","localStorageTests","localStorageSave","saveInLocalStorage","getLocalStorageValue","nameLocalStorage","defaultValue","valueString","Create","getLanguages","onSaveTask","description","tests","forEach","removeItem","setDescription","setTests","setName","debouncedSaveInLocalStorage","useDebouncedCallback","nameVariable","onChangeName","callback","onChangeDescription","onChangeLanguages","nameFile","newTests","addTest","removeTest","filter","_","i","tagsLanguages","useMemo","language","slug","createTask","container","length","languges","langugesTitle","selectLanguages","size","placeholder","style","minWidth","marginBottom","addonBefore","preview","paragraph","padding","dangerouslySetInnerHTML","__html","addButton","PlusOutlined","saveButtonBlock","SaveOutlined","TeacherCreateTask","TeacherTasks","margin","href","TaskStatus","TeacherStudents","WithLoadingFlags","action","isLoaded","hasError","isConsumerInitialized","updateTimeoutId","interval","load","tick","loadWithSavingState","bind","window","clearTimeout","func","MonitorStore","loadList","sort","md1","md2","date","PageSpinner","spinnerWrapper","indicator","LoadingOutlined","spin","MonitorPage","searchText","setSearchText","searchedColumn","setSearchColumn","searchInput","useRef","addConsumer","removeConsumer","getStringSorter","data1","data2","String","localeCompare","getStatusString","percent","running","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","onPressEnter","handleSearch","SearchOutlined","searchButton","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","current","select","render","highlightClassName","highlight","searchWords","autoEscape","textToHighlight","courses","dataSource","task","passed_tests_count","tests_count","dateObj","Date","Math","round","toLocaleDateString","toLocaleTimeString","userName","first_name","last_name","taskName","testCount","width","columns","sorter","Number","TeacherMonitor","App","setCheckLogin","IndexComponent","app","router","teacher","default","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","configure","reactionScheduler","f","enforceActions","defaults","baseURL","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.46dd4d3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__-bJlS\",\"editorButton\":\"User_editorButton__XCQJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DefaultLayout_content__3epWu\",\"footer\":\"DefaultLayout_footer__2qlk-\",\"logo\":\"DefaultLayout_logo__3goRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"router\":\"App_router__3W9nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"PageSpinner_spinnerWrapper__2Kwx6\",\"indicator\":\"PageSpinner_indicator__1MURC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2rzG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"removeButton\":\"Create_removeButton__1mZ_X\",\"container\":\"Create_container__1yu4s\",\"title\":\"Create_title__ZXhrt\",\"description\":\"Create_description__2Smnj\",\"preview\":\"Create_preview__2PFoA\",\"paragraph\":\"Create_paragraph__KTCat\",\"languges\":\"Create_languges__134fL\",\"langugesTitle\":\"Create_langugesTitle__AMecW\",\"selectLanguages\":\"Create_selectLanguages__38_Df\",\"file\":\"Create_file__26DrL\",\"fileName\":\"Create_fileName__3Rrmi\",\"testHide\":\"Create_testHide__32DBf\",\"addButton\":\"Create_addButton__1RMIv\",\"saveButtonBlock\":\"Create_saveButtonBlock__PczEz\",\"test\":\"Create_test__1p6Hi\"};","import axios from 'axios';\nimport { makeAutoObservable } from 'mobx';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\n\nfunction sleep(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport enum UserType {\n    student = 'student',\n    teacher = 'teacher',\n}\n\nexport type IUser = {\n    id: number;\n    login: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    type: UserType;\n};\n\nexport type IEditor = {\n    status: 'running' | 'exited';\n    port?: number;\n    isLoading?: boolean;\n};\n\nfunction getApi() {\n    return {\n        async login({ login, password }: { login: string; password: string }) {\n            const res = await axios.post<IUser>('/api/login/', {\n                login,\n                password,\n            });\n            return res.data;\n        },\n\n        async editorStatus(userId: number) {\n            const res = await axios.get<IEditor>(`/tasks/editor/${userId}/status/`);\n\n            return res.data;\n        },\n\n        async startEditor(userId: number) {\n            await axios.post(`/tasks/editor/${userId}/start/`);\n\n            let res: IEditor = await this.editorStatus(userId);\n            while (res?.status !== 'running') {\n                await sleep(1000);\n                res = await this.editorStatus(userId);\n            }\n\n            return res;\n        },\n\n        async stopEditor(userId: number) {\n            await axios.post(`/tasks/editor/${userId}/stop/`);\n\n            let res: IEditor = await this.editorStatus(userId);\n            while (res?.status !== 'exited') {\n                await sleep(1000);\n                res = await this.editorStatus(userId);\n            }\n\n            return res;\n        },\n    };\n}\n\nclass UserStoreClass {\n    api = getApi();\n    checkLogin = false;\n    user: IUser | null = null;\n    editor: IEditor | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setUser(user: IUser | null) {\n        this.user = user;\n        LocalStorageSafe.setItem('user', this.user);\n    }\n\n    setEditor(editor: IEditor | null) {\n        this.editor = editor;\n    }\n\n    setCheckLogin() {\n        this.checkLogin = true;\n    }\n\n    async login({ login, password }: { login: string; password: string }) {\n        const user = await this.api.login({ login, password });\n        this.setUser(user);\n    }\n\n    async editorStatus(userId: number) {\n        const editor = await this.api.editorStatus(userId);\n        this.setEditor(editor);\n    }\n\n    async startEditor(userId: number) {\n        if (this.editor) {\n            this.setEditor({ ...this.editor, isLoading: true });\n        }\n\n        const editor = await this.api.startEditor(userId);\n        this.setEditor(editor);\n    }\n\n    async stopEditor(userId: number) {\n        if (this.editor) {\n            this.setEditor({ ...this.editor, isLoading: true });\n        }\n\n        const editor = await this.api.stopEditor(userId);\n        this.setEditor(editor);\n    }\n}\n\nexport const UserStore = new UserStoreClass();\n","export const JsonSafe = {\n    parse<T = unknown>(text: string, reviver?: (this: T, key: string, value: T) => T): T | null {\n        try {\n            return JSON.parse(text, reviver) as T;\n        } catch {\n            return null;\n        }\n    },\n\n    stringify<T = unknown>(\n        value: T,\n        replacer?: (this: T, key: string, value: T) => T,\n        space?: string | number,\n    ): string {\n        try {\n            return JSON.stringify(value, replacer, space) || '';\n        } catch {\n            return '';\n        }\n    },\n};\n","import { JsonSafe } from './JsonSafe';\n\nexport const LocalStorageSafe = {\n    getItem<T = unknown>(key: string): T | null {\n        try {\n            const item = localStorage.getItem(key);\n            if (item === null) {\n                return item;\n            }\n            return JsonSafe.parse<T>(item);\n        } catch {\n            return null;\n        }\n    },\n\n    setItem<T = unknown>(key: string, item: T) {\n        try {\n            localStorage.setItem(key, JsonSafe.stringify(item));\n        } catch {}\n    },\n};\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/Login/Login.module.css';\nimport { Form, Input, Button, message } from 'antd';\nimport { observer } from 'mobx-react-lite';\nimport { navigate, RouteComponentProps } from '@reach/router';\nimport { UserStore } from 'src/stores/User';\n\ntype Values = {\n    login: string;\n    password: string;\n};\n\nfunction _Login() {\n    useEffect(() => {\n        if (UserStore.user) {\n            navigate('/');\n        }\n    }, [UserStore.user]);\n\n    async function onFinish(values: Values) {\n        try {\n            await UserStore.login(values);\n        } catch (error) {\n            console.info(error);\n            const statusText = error.response?.statusText;\n            const errorText = error.response?.status === 401 ? 'Пользователь не найден' : statusText || error.message;\n            message.error(`Не удалось войти. ${errorText}`);\n        }\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n\n    return (\n        <div className={styles.loginWrapper}>\n            <Form {...layout} name=\"basic\" onFinish={onFinish}>\n                <Form.Item\n                    label=\"Login\"\n                    name=\"login\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите login',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Пароль\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите пароль',\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Войти\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport const Login = observer<RouteComponentProps>(_Login);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\n\nfunction _NotFound() {\n    return <div>Страница не найдена</div>;\n}\n\nexport const NotFound = observer<RouteComponentProps>(_NotFound);\n","import { Redirect, RouteComponentProps } from '@reach/router';\nimport React from 'react';\nimport { UserStore } from 'src/stores/User';\nimport { observer } from 'mobx-react-lite';\nimport { Spin } from 'antd';\n\ninterface IWrapperUser {\n    children: React.ReactElement;\n}\n\ntype TWrapperUserObserver = IWrapperUser & RouteComponentProps;\n\nfunction _WrapperUser({ children }: IWrapperUser) {\n    if (!UserStore.checkLogin) {\n        return <Spin />;\n    }\n    if (UserStore.checkLogin && !UserStore.user) {\n        return <Redirect to={'/login'} noThrow />;\n    }\n\n    return children;\n}\n\nexport const WrapperUser = observer<TWrapperUserObserver>(_WrapperUser);\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/User/User.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { UserStore } from 'src/stores/User';\nimport { Button, Spin } from 'antd';\nimport { navigate } from '@reach/router';\n\nfunction _User() {\n    const user = UserStore.user;\n    const editor = UserStore.editor;\n    const isEditorRunning = editor?.status === 'running';\n    const editorButtonMessage = isEditorRunning ? 'Остановить редактор' : 'Запустить редактор';\n    const isEditorChanging = editor?.isLoading;\n\n    useEffect(() => {\n        if (user) {\n            UserStore.editorStatus(user.id);\n        }\n    }, []);\n\n    function onLogOut() {\n        UserStore.setUser(null);\n        navigate('/');\n    }\n\n    function onStart() {\n        if (user) {\n            UserStore.startEditor(user.id);\n        }\n    }\n\n    function onStop() {\n        if (user) {\n            UserStore.stopEditor(user.id);\n        }\n    }\n\n    return (\n        <div className={styles.user}>\n            <div className={styles.email}>{user?.email}</div>\n            <Button\n                className={styles.editorButton}\n                onClick={isEditorRunning ? onStop : onStart}\n                danger={isEditorRunning}\n            >\n                {isEditorChanging ? <Spin /> : editorButtonMessage}\n            </Button>\n            <Button className={styles.logOutButton} onClick={onLogOut}>\n                Выйти\n            </Button>\n        </div>\n    );\n}\n\nexport const User = observer(_User);\n","export default __webpack_public_path__ + \"static/media/logo.c8be1847.png\";","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { navigate } from '@reach/router';\n\nimport { User } from 'src/components/User/User';\n\nimport logo from 'src/components/DefaultLayout/logo.png';\nimport styles from 'src/components/DefaultLayout/DefaultLayout.module.css';\n\nconst { Header, Content, Footer } = Layout;\n\ninterface IMenuItem {\n    title: string;\n    path: string;\n}\n\ninterface IDefaultLayout {\n    children: React.ReactNode;\n    indexMenuItem: number;\n    menuItems: IMenuItem[];\n    setIndexMenuItem: (index: number) => void;\n}\n\nexport function DefaultLayout({ children, indexMenuItem, menuItems, setIndexMenuItem }: IDefaultLayout) {\n    return (\n        <Layout>\n            <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[`${indexMenuItem}`]}>\n                    <Menu.Item key=\"logo\">\n                        <img alt=\"logo\" className={styles.logo} src={logo} />\n                    </Menu.Item>\n                    {menuItems.map((item, index) => (\n                        <Menu.Item\n                            key={`${index}`}\n                            onClick={() => {\n                                setIndexMenuItem(index);\n                                navigate(item.path);\n                            }}\n                        >\n                            {item.title}\n                        </Menu.Item>\n                    ))}\n                    <User />\n                </Menu>\n            </Header>\n            <Content className={styles.content}>{children}</Content>\n            <Footer className={styles.footer}>Pseudocoders ©2020</Footer>\n        </Layout>\n    );\n}\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { DefaultLayout } from 'src/components/DefaultLayout/DefaultLayout';\nimport { UserStore } from 'src/stores/User';\n\ninterface ITeacherPage {\n    path: string;\n    children: React.ReactNode;\n}\n\nconst menuItems = [\n    {\n        title: 'Задачи',\n        path: 'tasks',\n    },\n    {\n        title: 'Ученики',\n        path: 'students',\n    },\n    {\n        title: 'Монитор',\n        path: 'monitoring',\n    },\n];\n\nfunction _TeacherPage({ path, children }: ITeacherPage) {\n    const extMenuItems = Array.from(menuItems);\n\n    if (UserStore.editor?.status === 'running') {\n        extMenuItems.push({\n            title: 'Редактор',\n            path: `http://api.pseudocoders.online:${UserStore.editor.port}`,\n        });\n    }\n\n    const startIndexMenuItem = extMenuItems.findIndex((item) => item.path === path);\n\n    if (startIndexMenuItem === -1) {\n        throw new Error('invalid path');\n    }\n\n    const [indexMenuItem, setIndexMenuItem] = useState(startIndexMenuItem);\n\n    return (\n        <DefaultLayout menuItems={extMenuItems} indexMenuItem={indexMenuItem} setIndexMenuItem={setIndexMenuItem}>\n            {children}\n        </DefaultLayout>\n    );\n}\n\nexport const TeacherPage = observer(_TeacherPage);\n","import { makeAutoObservable } from 'mobx';\n\nexport interface Language {\n    name: string;\n    slug: string;\n    id: string;\n}\n\nconst HOST_API = 'http://api.pseudocoders.online/api/';\n\nfunction getApi() {\n    return {\n        async loadLanguages() {\n            const response = await fetch(`${HOST_API}languages/`, { method: 'get' });\n            if (response.ok) {\n                return response.json();\n            }\n        },\n\n        async saveTask(data: any) {\n            console.log(JSON.stringify(data));\n            const response = await fetch(`${HOST_API}tasks/`, { method: 'post', body: JSON.stringify(data) });\n            return response.status;\n        },\n    };\n}\n\nclass CreateStoreClass {\n    api = getApi();\n    languages = [];\n    saveProcess = false;\n    saveStatus = 0;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setLanguages(languages: any) {\n        this.languages = languages;\n    }\n\n    async getLanguages() {\n        const lang = await this.api.loadLanguages();\n        this.setLanguages(lang);\n    }\n\n    async saveTask(data: any) {\n        this.saveProcess = true;\n        const status = await this.api.saveTask(data);\n        this.saveProcess = false;\n        this.saveStatus = status;\n    }\n}\n\nexport const CreateStore = new CreateStoreClass();\n","import React, { useCallback } from 'react';\nimport styles from 'src/components/Create/Create.module.css';\nimport { Button, Input } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\nconst { TextArea } = Input;\n\nconst TestBlock = ({ input, output, idx, onChangeTests, onDelete }: any) => {\n    const onChange = useCallback(\n        (name: 'input' | 'output') => (e: any) => {\n            onChangeTests(e.target.value, idx, name);\n        },\n        [],\n    );\n\n    return (\n        <>\n            <p className={styles.testHide}>\n                Тест {idx + 1}\n                <Button\n                    className={styles.removeButton}\n                    onClick={onDelete}\n                    icon={<CloseOutlined />}\n                    shape=\"circle\"\n                    danger\n                />\n            </p>\n            <div className={styles.test}>\n                <div className={styles.file}>\n                    <p className={styles.fileName}>input.txt</p>\n                    <TextArea value={input} rows={4} onChange={onChange('input')} />\n                </div>\n                <div className={styles.file}>\n                    <p className={styles.fileName}>output.txt</p>\n                    <TextArea value={output} rows={4} onChange={onChange('output')} />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default TestBlock;\n","import React, { useMemo, useCallback, useEffect, useState } from 'react';\nimport styles from 'src/components/Create/Create.module.css';\nimport { CreateStore, Language } from 'src/stores/Create';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\nimport ReactQuill from 'react-quill';\nimport { Input, Select, Button } from 'antd';\nimport { PlusOutlined, SaveOutlined } from '@ant-design/icons';\nimport 'react-quill/dist/quill.snow.css';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport TestBlock from './TestBlock';\n\nconst { Option } = Select;\n\nconst modules = {\n    toolbar: [\n        [{ header: [1, 2, false] }],\n        [\n            {\n                color: [\n                    '#FFFFFF',\n                    '#000000',\n                    '#3072C4',\n                    '#228007',\n                    '#CE0014',\n                    '#D97E00',\n                    '#7A1871',\n                    '#F2F2F2',\n                    '#808080',\n                    '#1D85D0',\n                    '#3F9726',\n                    '#D70C17',\n                    '#F69C00',\n                    '#B254AA',\n                ],\n            },\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'blockquote',\n        ],\n        [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n        ['link', 'image', 'code'],\n        ['clean'],\n    ],\n};\n\nconst formats = [\n    'header',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'indent',\n    'link',\n    'image',\n    'code',\n    'color',\n];\n\nconst localStorageName = 'TASK_NAME';\nconst localStorageDescription = 'TASK_DESCRIPTION';\nconst localStorageLanguages = 'TASK_LANGUAGES';\nconst localStorageTests = 'TASK_TESTS';\nconst localStorageSave = 'IS_SAVE';\n\nconst saveInLocalStorage = (name: string, value: string) => {\n    localStorage.setItem(name, JSON.stringify(value));\n};\n\nconst getLocalStorageValue = (nameLocalStorage: string, defaultValue: any = '') => {\n    const valueString = localStorage.getItem(nameLocalStorage);\n    if (valueString) {\n        return JSON.parse(valueString);\n    }\n\n    return defaultValue;\n};\n\ninterface Test {\n    input?: string;\n    output?: string;\n}\n\nexport type ChangeTests = (value: string, index: number, nameFile: 'input' | 'output') => void;\n\nfunction _Create() {\n    useEffect(() => {\n        (async () => {\n            await CreateStore.getLanguages();\n        })();\n    }, []);\n\n    const onSaveTask = useCallback(() => {\n        CreateStore.saveTask({\n            name: getLocalStorageValue(localStorageName),\n            languages: getLocalStorageValue(localStorageLanguages),\n            description: getLocalStorageValue(localStorageDescription),\n            tests: getLocalStorageValue(localStorageTests),\n        });\n        saveInLocalStorage(localStorageSave, 'on');\n    }, []);\n\n    useEffect(() => {\n        if (getLocalStorageValue(localStorageSave) === 'on') {\n            console.log('saveProcess', CreateStore.saveProcess, CreateStore.saveStatus);\n            if (!CreateStore.saveProcess && CreateStore.saveStatus === 200) {\n                const keys = [\n                    localStorageName,\n                    localStorageDescription,\n                    localStorageLanguages,\n                    localStorageTests,\n                    localStorageSave,\n                ];\n                keys.forEach((key) => {\n                    localStorage.removeItem(key);\n                });\n            } else {\n                console.log('error', CreateStore.saveStatus);\n            }\n        }\n    }, [CreateStore.saveProcess, CreateStore.saveStatus]);\n\n    const [description, setDescription] = useState(getLocalStorageValue(localStorageDescription));\n\n    const [tests, setTests] = useState<Test[]>(getLocalStorageValue(localStorageTests, [{ input: '', output: '' }]));\n\n    const [name, setName] = useState(getLocalStorageValue(localStorageName));\n\n    const [languages, setLanguages] = useState(getLocalStorageValue(localStorageLanguages, []));\n\n    const debouncedSaveInLocalStorage = useDebouncedCallback((nameVariable, value) => {\n        saveInLocalStorage(nameVariable, value);\n    }, 300);\n\n    const onChangeName = useCallback(\n        (e) => {\n            const value = e.target.value;\n            setName(value);\n            debouncedSaveInLocalStorage.callback(localStorageName, value);\n        },\n        [setName],\n    );\n\n    const onChangeDescription = useCallback(\n        (value) => {\n            setDescription(value);\n            debouncedSaveInLocalStorage.callback(localStorageDescription, value);\n        },\n        [setDescription],\n    );\n\n    const onChangeLanguages = useCallback((value) => {\n        setLanguages(value);\n        debouncedSaveInLocalStorage.callback(localStorageLanguages, value);\n    }, []);\n\n    const onChangeTests: ChangeTests = useCallback(\n        (value: string, index: number, nameFile: 'input' | 'output') => {\n            const newTests = [...tests];\n            console.log(index, newTests);\n            newTests[index][nameFile] = value;\n\n            setTests(newTests);\n            debouncedSaveInLocalStorage.callback(localStorageTests, newTests);\n        },\n        [tests],\n    );\n\n    const addTest = useCallback(() => {\n        setTests([...tests, { input: '', output: '' }]);\n    }, [setTests, tests]);\n\n    const removeTest = (idx: number) => {\n        return () => {\n            setTests(tests.filter((_, i) => i !== idx));\n        };\n    };\n\n    const tagsLanguages = useMemo(\n        () =>\n            CreateStore.languages.map((language: Language) => (\n                <Option value={language.slug} key={language.slug}>\n                    {language.name}\n                </Option>\n            )),\n        [CreateStore.languages],\n    );\n\n    return (\n        <div className={styles.createTask}>\n            <div className={styles.container}>\n                <h1 className={styles.title}>Создание задачи</h1>\n                <p className={styles.description}>\n                    Добавьте заголовок и описание задачи. Для красочности вы можете использовать разные цвета, добавлять\n                    картинки, списки и код.\n                </p>\n                {CreateStore.languages.length && (\n                    <div className={styles.languges}>\n                        <div className={styles.langugesTitle}>ЯЗЫКИ ПРОГРАММИРОВАНИЯ</div>\n                        <Select\n                            className={styles.selectLanguages}\n                            mode=\"tags\"\n                            size=\"middle\"\n                            placeholder=\"Please select\"\n                            defaultValue={languages}\n                            onChange={onChangeLanguages}\n                            style={{ minWidth: '200px' }}\n                        >\n                            {tagsLanguages}\n                        </Select>\n                    </div>\n                )}\n                <div style={{ marginBottom: 16 }}>\n                    <Input\n                        value={name}\n                        onChange={onChangeName}\n                        addonBefore=\"НАЗВАНИЕ ЗАДАЧИ\"\n                        placeholder=\"Бифштексы...\"\n                    />\n                </div>\n                <div className=\"text-editor\">\n                    <ReactQuill\n                        theme=\"snow\"\n                        modules={modules}\n                        formats={formats}\n                        value={description}\n                        onChange={onChangeDescription}\n                    />\n                </div>\n                {(description || name) && (\n                    <div className={styles.preview}>\n                        <h3 className={styles.paragraph}>Предпросмотр</h3>\n                        <h2>{name}</h2>\n                        <div\n                            style={{ padding: 0 }}\n                            className=\"ql-editor\"\n                            dangerouslySetInnerHTML={{ __html: description }}\n                        />\n                    </div>\n                )}\n\n                <h3 className={styles.paragraph}>Добавить тесты</h3>\n                {tests.map((item: Test, idx: number) => (\n                    <TestBlock key={idx} idx={idx} {...item} onChangeTests={onChangeTests} onDelete={removeTest(idx)} />\n                ))}\n                <Button className={styles.addButton} onClick={addTest} icon={<PlusOutlined />}>\n                    Добавить тест\n                </Button>\n                <div className={styles.saveButtonBlock}>\n                    <Button\n                        type=\"primary\"\n                        // disabled={CreateStore.saveProcess}\n                        onClick={onSaveTask}\n                        icon={<SaveOutlined />}\n                    >\n                        Сохранить задачу\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport const Create = observer<RouteComponentProps>(_Create);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { Create } from './Create';\n\nfunction _TeacherCreateTask() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"tasks\">\n                <Create />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherCreateTask = observer<RouteComponentProps>(_TeacherCreateTask);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\n\nfunction _TeacherTasks() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"tasks\">\n                <div style={{ margin: 20 }}>\n                    <a href=\"/create\">Создать задачу</a>\n                </div>\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherTasks = observer<RouteComponentProps>(_TeacherTasks);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\n\nfunction _TeacherStudents() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"students\">\n                <div>students</div>\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherStudents = observer<RouteComponentProps>(_TeacherStudents);\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport axios from 'axios';\nimport { IUser } from 'src/stores/User';\n\nfunction getApi() {\n    return {\n        async loadList(): Promise<MonitorData[]> {\n            const res = await axios.get<MonitorData[]>('api/task_checks/');\n            return res.data.sort((md1, md2) => md2.date - md1.date);\n        },\n    };\n}\n\nexport enum TaskStatus {\n    running = 'running',\n    stopped = 'stopped',\n    ce = 'ce',\n    re = 're',\n    tle = 'tle',\n    wa = 'wa',\n    ok = 'ok',\n}\ntype Language = {\n    id: number;\n    name: string;\n    slug: string;\n};\ntype Task = {\n    id: number;\n    name: string;\n    slug: string;\n};\nexport type MonitorData = {\n    date: number;\n    id: number;\n    language: Language;\n    passed_tests_count: number;\n    status: TaskStatus;\n    task: Task;\n    tests_count: number;\n    user: Pick<IUser, 'id' | 'login' | 'last_name' | 'first_name'>;\n};\nclass MonitorStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags<MonitorData[]>(this.api.loadList);\n}\n\nexport const MonitorStore = new MonitorStoreClass();\n","import { makeAutoObservable } from 'mobx';\n\nexport class WithLoadingFlags<Result = unknown> {\n    isLoading = true;\n    isLoaded = false;\n    hasError = false;\n    isConsumerInitialized = false;\n    updateTimeoutId: number | null = null;\n    interval = 3000;\n    // @ts-ignore\n    data: Result;\n    action: () => Promise<Result>;\n\n    constructor(action: () => Promise<Result>) {\n        this.action = action;\n        makeAutoObservable(this);\n    }\n\n    async load() {\n        try {\n            this.isLoading = true;\n            this.data = await this.action();\n            this.hasError = false;\n        } catch (error) {\n            console.error(error);\n            this.hasError = true;\n        } finally {\n            this.isLoaded = true;\n            this.isLoading = false;\n        }\n    }\n\n    async loadWithSavingState() {\n        try {\n            this.data = await this.action();\n            this.hasError = false;\n        } catch (error) {\n            console.error(error);\n            this.hasError = true;\n        } finally {\n            this.isLoaded = true;\n            this.isLoading = false;\n        }\n    }\n\n    loadIfNotLoaded() {\n        if (!this.isLoaded) {\n            this.load();\n        }\n    }\n\n    async addConsumer() {\n        if (this.isConsumerInitialized) {\n            return;\n        }\n\n        this.isConsumerInitialized = true;\n\n        await this.tick(this.loadWithSavingState.bind(this));\n    }\n\n    removeConsumer() {\n        this.isConsumerInitialized = false;\n        this.updateTimeoutId && window.clearTimeout(this.updateTimeoutId);\n    }\n\n    async tick(func: () => void) {\n        await func();\n\n        this.updateTimeoutId && window.clearTimeout(this.updateTimeoutId);\n\n        if (!this.isConsumerInitialized) {\n            return;\n        }\n\n        this.updateTimeoutId = window.setTimeout(() => this.tick(func), this.interval);\n    }\n}\n","import React from 'react';\nimport styles from 'src/components/PageSpinner/PageSpinner.module.css';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nexport function PageSpinner() {\n    return (\n        <div className={styles.spinnerWrapper}>\n            <Spin indicator={<LoadingOutlined className={styles.indicator} spin />} />\n        </div>\n    );\n}\n","import { RouteComponentProps } from '@reach/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from 'src/components/TeacherPage/TeacherMonitor/MonitorPage.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { MonitorStore, TaskStatus } from 'src/components/TeacherPage/TeacherMonitor/MonitorStore';\nimport { Button, Input, Progress, Space, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction _MonitorPage() {\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchColumn] = useState<keyof RecordType | ''>('');\n    const searchInput = useRef() as React.MutableRefObject<Input | null>;\n\n    useEffect(() => {\n        MonitorStore.list.addConsumer();\n\n        return () => {\n            MonitorStore.list.removeConsumer();\n        };\n    }, []);\n\n    if (MonitorStore.list.isLoading) {\n        return <PageSpinner />;\n    }\n\n    if (MonitorStore.list.hasError) {\n        return <>Монитор недоступен</>;\n    }\n\n    function getStringSorter(key: keyof RecordType) {\n        return (data1: RecordType, data2: RecordType) => String(data1[key]).localeCompare(String(data2[key]));\n    }\n\n    function getColumns(): ColumnsType<RecordType> {\n        return [\n            {\n                title: 'Дата',\n                dataIndex: 'date',\n                sorter: (data1, data2) => Number(data1.dateObj) - Number(data2.dateObj),\n            },\n            {\n                title: 'Ученик',\n                dataIndex: 'userName',\n                sorter: getStringSorter('userName'),\n                ...getColumnSearchProps('userName'),\n            },\n            {\n                title: 'Задача',\n                dataIndex: 'taskName',\n                sorter: getStringSorter('taskName'),\n                ...getColumnSearchProps('taskName'),\n            },\n            {\n                title: 'Язык',\n                dataIndex: 'language',\n                sorter: getStringSorter('language'),\n                ...getColumnSearchProps('language'),\n            },\n            {\n                title: 'Результат',\n                dataIndex: 'status',\n                sorter: getStringSorter('status'),\n            },\n            {\n                title: 'Количество пройденных тестов',\n                dataIndex: 'testCount',\n            },\n        ];\n    }\n\n    function getDataSource() {\n        return MonitorStore.list.data.map(\n            ({ date, user, task, language, id, passed_tests_count, tests_count, status }) => {\n                const dateObj = new Date(date);\n                const percent = Math.round((passed_tests_count * 100) / tests_count);\n                return {\n                    key: id,\n                    dateObj,\n                    date: `${dateObj.toLocaleDateString()} ${dateObj.toLocaleTimeString()}`,\n                    userName: `${user.first_name} ${user.last_name}`,\n                    taskName: task.name,\n                    language: language.name,\n                    testCount: `${passed_tests_count}/${tests_count}`,\n                    status: (\n                        <div className={styles.status}>\n                            <div className={styles[status]}>{status}</div>\n                            <Progress\n                                type=\"circle\"\n                                width={30}\n                                percent={percent}\n                                status={getStatusString(percent, status)}\n                            />\n                        </div>\n                    ),\n                };\n            },\n        );\n    }\n\n    function getStatusString(percent: number, status: TaskStatus) {\n        if (percent < 100 && status !== TaskStatus.running) {\n            return 'exception';\n        }\n\n        if (percent === 100) {\n            return 'success';\n        }\n\n        return 'active';\n    }\n\n    function getColumnSearchProps(dataIndex: keyof RecordType) {\n        return {\n            filterDropdown({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) {\n                return (\n                    <div style={{ padding: 8 }}>\n                        <Input\n                            ref={searchInput}\n                            placeholder={`Поиск по ${dataIndex}`}\n                            value={selectedKeys[0]}\n                            onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                            className={styles.searchInput}\n                        />\n                        <Space>\n                            <Button\n                                type=\"primary\"\n                                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                                icon={<SearchOutlined />}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Поиск\n                            </Button>\n                            <Button\n                                onClick={() => handleReset(clearFilters)}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Сбросить\n                            </Button>\n                        </Space>\n                    </div>\n                );\n            },\n            filterIcon(filtered: boolean) {\n                return <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />;\n            },\n            onFilter: (value: any, record: any) =>\n                record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n            onFilterDropdownVisibleChange: (visible: boolean) => {\n                if (visible) {\n                    setTimeout(() => searchInput.current?.select(), 100);\n                }\n            },\n            render(text: string) {\n                return searchedColumn === dataIndex ? (\n                    <Highlighter\n                        highlightClassName={styles.highlight}\n                        searchWords={[searchText]}\n                        autoEscape\n                        textToHighlight={text ? text.toString() : ''}\n                    />\n                ) : (\n                    text\n                );\n            },\n        };\n    }\n\n    function handleSearch(selectedKeys: string[], confirm: () => void, dataIndex: keyof RecordType) {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchColumn(dataIndex);\n    }\n\n    function handleReset(clearFilters: () => void) {\n        clearFilters();\n        setSearchText('');\n    }\n\n    type RecordType = ReturnType<typeof getDataSource>[number];\n\n    return (\n        <div className={styles.courses}>\n            <Table<RecordType> dataSource={getDataSource()} columns={getColumns()} />\n        </div>\n    );\n}\n\nexport const MonitorPage = observer<RouteComponentProps>(_MonitorPage);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { MonitorPage } from './MonitorPage';\n\nfunction _TeacherMonitor() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"monitoring\">\n                <MonitorPage />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherMonitor = observer<RouteComponentProps>(_TeacherMonitor);\n","import React, { useEffect } from 'react';\nimport styles from 'src/App.module.css';\nimport 'src/App.css';\nimport { navigate, Router, RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { Login } from 'src/components/Login/Login';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nimport { IUser, UserStore, UserType } from 'src/stores/User';\nimport { NotFound } from 'src/components/NotFound/NotFound';\nimport { TeacherCreateTask } from 'src/components/Create';\nimport { TeacherTasks } from 'src/components/TeacherPage/TeacherTasks/TeacherTasks';\nimport { TeacherStudents } from 'src/components/TeacherPage/TeacherStudents/TeacherStudents';\nimport { TeacherMonitor } from 'src/components/TeacherPage/TeacherMonitor/TeacherMonitor';\n\nfunction _App() {\n    useEffect(() => {\n        const user = LocalStorageSafe.getItem<IUser>('user');\n        if (!user) {\n            navigate('/login');\n        } else {\n            UserStore.setUser(user);\n        }\n\n        UserStore.setCheckLogin();\n    }, []);\n\n    const IndexComponent = TeacherTasks;\n\n    return (\n        <div className={styles.app}>\n            <Router className={styles.router}>\n                {UserStore.user?.type === UserType.teacher && (\n                    <>\n                        <TeacherCreateTask path=\"create\" />\n                        <TeacherTasks path=\"tasks\" />\n                        <TeacherStudents path=\"students\" />\n                        <TeacherMonitor path=\"monitoring\" />\n                    </>\n                )}\n                <IndexComponent path=\"/\" />\n                <Login path=\"login\" />\n                <NotFound default />\n            </Router>\n        </div>\n    );\n}\n\nconst App = observer<RouteComponentProps>(_App);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { configure } from 'mobx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css';\nimport App from '../src/App';\nimport reportWebVitals from '../src/reportWebVitals';\nimport axios from 'axios';\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconfigure({\n    reactionScheduler(f) {\n        setTimeout(f); // https://habr.com/ru/company/mailru/blog/522312/#comment_22162136\n    },\n    enforceActions: 'never',\n});\n\naxios.defaults.baseURL = 'https://api.pseudocoders.online/';\n\nfunction renderApp() {\n    ReactDOM.render(<App />, document.querySelector('#root'));\n}\n\nrenderApp();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monitorPage\":\"MonitorPage_monitorPage__12FYi\",\"searchInput\":\"MonitorPage_searchInput__1A7eQ\",\"searchButton\":\"MonitorPage_searchButton__2_Llr\",\"highlight\":\"MonitorPage_highlight__y6A5c\",\"status\":\"MonitorPage_status__2uZhn\",\"running\":\"MonitorPage_running__2CRRc\",\"stopped\":\"MonitorPage_stopped__3v1aX\",\"ce\":\"MonitorPage_ce__3ZOUM\",\"re\":\"MonitorPage_re__2KimH\",\"tle\":\"MonitorPage_tle__3z8cp\",\"wa\":\"MonitorPage_wa__1lIF6\",\"ok\":\"MonitorPage_ok__LAKh8\"};"],"sourceRoot":""}