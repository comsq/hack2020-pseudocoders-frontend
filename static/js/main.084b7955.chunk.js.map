{"version":3,"sources":["components/User/User.module.css","components/Courses/Courses.module.css","App.module.css","components/PageSpinner/PageSpinner.module.css","components/AppHeader/AppHeader.module.css","components/Login/Login.module.css","stores/User.ts","helpers/JsonSafe.ts","helpers/LocalStorageSafe.ts","components/User/User.tsx","components/AppHeader/AppHeader.tsx","helpers/StoreHelper.ts","helpers/AsyncHelper.ts","stores/Courses.ts","components/PageSpinner/PageSpinner.tsx","components/Courses/Courses.tsx","components/Login/Login.tsx","components/IndexPage/IndexPage.tsx","components/NotFound/NotFound.tsx","components/MonitorPage/MonitorStore.ts","components/MonitorPage/MonitorPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/MonitorPage/MonitorPage.module.css"],"names":["module","exports","UserType","JsonSafe","text","reviver","JSON","parse","value","replacer","space","stringify","LocalStorageSafe","key","item","localStorage","getItem","setItem","UserStore","api","login","password","axios","post","res","data","checkLogin","user","makeAutoObservable","this","setUser","User","observer","className","styles","email","logOutButton","onClick","navigate","AppHeader","appHeader","to","WithLoadingFlags","action","isLoading","isLoaded","hasError","console","error","load","AsyncHelper","time","Promise","resolve","setTimeout","CoursesStore","loadList","name","description","list","PageSpinner","spinnerWrapper","indicator","LoadingOutlined","spin","Courses","useEffect","loadIfNotLoaded","courses","map","course","index","Login","values","a","info","statusText","response","errorText","status","message","loginWrapper","labelCol","span","wrapperCol","onFinish","Item","label","rules","required","Password","offset","type","htmlType","IndexPage","noThrow","TaskStatus","NotFound","MonitorStore","student_id","task_id","ok","id","passed_tests_count","test_count","date","language","wa","monitorData","MonitorPage","useState","searchText","setSearchText","searchedColumn","setSearchColumn","searchInput","useRef","getStringSorter","data1","data2","String","localeCompare","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","placeholder","onChange","e","target","onPressEnter","handleSearch","icon","SearchOutlined","size","searchButton","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","current","select","render","highlightClassName","highlight","searchWords","autoEscape","textToHighlight","dataSource","dateObj","Date","toLocaleDateString","toLocaleTimeString","testCount","columns","title","sorter","Number","App","setCheckLogin","app","router","path","default","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","configure","reactionScheduler","f","enforceActions","defaults","baseURL","ReactDOM","document","querySelector"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,+B,oBCApGD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,sB,oBCAlDD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,UAAY,iC,oBCAnFD,EAAOC,QAAU,CAAC,UAAY,+B,oBCA9BD,EAAOC,QAAU,CAAC,aAAe,8B,wFCG5BC,E,+JCJQC,EAAW,SACDC,EAAcC,GAC7B,IACI,OAAOC,KAAKC,MAAMH,EAAMC,GAC1B,SACE,OAAO,OALNF,EAAW,SAUhBK,EACAC,EACAC,GAEA,IACI,OAAOJ,KAAKK,UAAUH,EAAOC,EAAUC,IAAU,GACnD,SACE,MAAO,KCfNE,EAAmB,SACPC,GACjB,IACI,IAAMC,EAAOC,aAAaC,QAAQH,GAClC,OAAa,OAATC,EACOA,EAEJX,EAAkBW,GAC3B,SACE,OAAO,OATNF,EAAmB,SAaPC,EAAaC,GAC9B,IACIC,aAAaE,QAAQJ,EAAKV,EAAmBW,IAC/C,a,SFdLZ,K,kBAAAA,E,mBAAAA,M,SAgDQgB,EAAY,I,WAnBrB,aAAe,yBAJfC,IAZO,CACGC,MADH,YACoE,OAAD,qHAAxDA,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,SAAiD,SAChDC,IAAMC,KAAY,cAAe,CAC/CH,QACAC,aAH8D,cAC5DG,EAD4D,yBAK3DA,EAAIC,MALuD,+CAe5D,KAHdC,YAAa,EAGC,KAFdC,KAAqB,KAGjBC,YAAmBC,M,oDAGfF,GACJE,KAAKF,KAAOA,EACZf,EAAyB,OAAQiB,KAAKF,Q,sCAItCE,KAAKH,YAAa,I,0JAGRN,E,EAAAA,MAAOC,E,EAAAA,S,SACEQ,KAAKV,IAAIC,MAAM,CAAEA,QAAOC,a,OAArCM,E,OACNE,KAAKC,QAAQH,G,iJGvBd,IAAMI,EAAOC,aAlBpB,WACI,IAAML,EAAOT,EAAUS,KAOvB,OACI,sBAAKM,UAAWC,IAAOP,KAAvB,UACI,qBAAKM,UAAWC,IAAOC,MAAvB,gBAA+BR,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMQ,QACrC,cAAC,IAAD,CAAQF,UAAWC,IAAOE,aAAcC,QARhD,WACInB,EAAUY,QAAQ,MAClBQ,YAAS,MAML,kDCIL,IAAMC,EAAYP,aAfzB,WACI,OAAKd,EAAUS,KAKX,sBAAKM,UAAWC,IAAOM,UAAvB,UACI,cAAC,IAAD,CAAMC,GAAG,WAAT,4CACA,cAAC,IAAD,CAAMA,GAAG,WAAT,iIAEA,cAACV,EAAD,OARG,Q,kBCPFW,EAAb,WAQI,WAAYC,GAAgC,yBAP5CC,WAAY,EAO+B,KAN3CC,UAAW,EAMgC,KAL3CC,UAAW,EAKgC,KAH3CrB,UAG2C,OAF3CkB,YAE2C,EACvCd,KAAKc,OAASA,EACdf,YAAmBC,MAV3B,6KAeYA,KAAKe,WAAY,EAf7B,SAgB8Bf,KAAKc,SAhBnC,OAgBYd,KAAKJ,KAhBjB,OAiBYI,KAAKiB,UAAW,EAjB5B,gDAmBYC,QAAQC,MAAR,MACAnB,KAAKiB,UAAW,EApB5B,yBAsBYjB,KAAKgB,UAAW,EAChBhB,KAAKe,WAAY,EAvB7B,0KA4Baf,KAAKgB,UACNhB,KAAKoB,WA7BjB,KCFaC,EAAc,SACjBC,GACF,OAAO,IAAIC,SAAQ,SAACC,GAChBC,WAAWD,EAASF,O,IC+BnBI,EAAe,I,sCAJxBpC,IA1BO,CACGqC,SADH,WACe,OAAD,oHACPN,EAAkB,KADX,gCAEN,CACH,CACIO,KAAM,4CACNC,YAAa,gEAEjB,CACID,KAAM,2CACNC,YAAa,kDAEjB,CACID,KAAM,0CACNC,YAAa,oGAbR,+C,KA0BrBC,KAAO,IAAIjB,EAA2Bb,KAAKV,IAAIqC,W,oCC1B5C,SAASI,IACZ,OACI,qBAAK3B,UAAWC,IAAO2B,eAAvB,SACI,cAAC,IAAD,CAAMC,UAAW,cAACC,EAAA,EAAD,CAAiB9B,UAAWC,IAAO4B,UAAWE,MAAI,QC0BxE,IAAMC,EAAUjC,aA3BvB,WAKI,OAJAkC,qBAAU,WACNX,EAAaI,KAAKQ,oBACnB,IAECZ,EAAaI,KAAKf,UACX,cAACgB,EAAD,IAGPL,EAAaI,KAAKb,SACX,4EAIP,qBAAKb,UAAWC,IAAOkC,QAAvB,SACKb,EAAaI,KAAKlC,KAAK4C,KAAI,SAACC,EAAQC,GACjC,OACI,sBAAiBtC,UAAWC,IAAOoC,OAAnC,UACI,8BAAMA,EAAOb,OACb,qBAAKxB,UAAWC,IAAOwB,YAAvB,SAAqCY,EAAOZ,gBAFtCa,W,oDCmDvB,IAAMC,EAAQxC,aA/DrB,WAAkB,4CAOd,WAAwByC,GAAxB,qBAAAC,EAAA,+EAEcxD,EAAUE,MAAMqD,GAF9B,uDAIQ1B,QAAQ4B,KAAR,MACMC,EALd,UAK2B,KAAMC,gBALjC,aAK2B,EAAgBD,WAC7BE,EAAuC,OAA3B,eAAMD,gBAAN,eAAgBE,QAAiB,6HAA2BH,GAAc,KAAMI,QAClGA,IAAQhC,MAAR,kGAAmC8B,IAP3C,0DAPc,sBA0Bd,OAzBAZ,qBAAU,WACFhD,EAAUS,MACVW,YAAS,OAEd,CAACpB,EAAUS,OAsBV,qBAAKM,UAAWC,IAAO+C,aAAvB,SACI,eAAC,IAAD,2BAVO,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAQhB,IAAkB1B,KAAK,QAAQ4B,SA5BzB,4CA4BN,UACI,cAAC,IAAKC,KAAN,CACIC,MAAM,QACN9B,KAAK,QACL+B,MAAO,CACH,CACIC,UAAU,EACVT,QAAS,qDANrB,SAUI,cAAC,IAAD,MAEJ,cAAC,IAAKM,KAAN,CACIC,MAAM,uCACN9B,KAAK,WACL+B,MAAO,CACH,CACIC,UAAU,EACVT,QAAS,oFANrB,SAUI,cAAC,IAAMU,SAAP,MAEJ,cAAC,IAAKJ,KAAN,2BA/BO,CACfF,WAAY,CAAEO,OAAQ,EAAGR,KAAM,MA8BvB,aACI,cAAC,IAAD,CAAQS,KAAK,UAAUC,SAAS,SAAhC,wDCjDb,IAAMC,EAAY9D,aAXzB,WACI,OAAKd,EAAUQ,WAGXR,EAAUQ,aAAeR,EAAUS,KAC5B,cAAC,IAAD,CAAUc,GAAI,SAAUsD,SAAO,IAGnC,cAAC,IAAD,CAAUtD,GAAI,WAAYsD,SAAO,IAN7B,cAAC,IAAD,OCAR,IC4BFC,ED5BQC,EAAWjE,aAJxB,WACI,OAAO,8I,qCC+BNgE,K,kBAAAA,E,kBAAAA,E,QAAAA,E,QAAAA,E,UAAAA,E,QAAAA,E,SAAAA,M,SAwBQE,GAAe,I,sCAJxB/E,IApDO,CACGqC,SADH,WACuC,OAAD,oHAC/BN,EAAkB,KADa,gCAE9B,CACH,CACIiD,WAAY,EACZC,QAAS,IACTrB,OAAQiB,EAAWK,GACnBC,GAAI,IACJC,mBAAoB,GACpBC,WAAY,GACZC,KAAM,WACNC,SAAU,YAEd,CACIP,WAAY,EACZC,QAAS,IACTrB,OAAQiB,EAAWW,GACnBL,GAAI,IACJC,mBAAoB,EACpBC,WAAY,GACZC,KAAM,WACNC,SAAU,QAEhBrC,KAAI,SAACuC,GAAD,mBAAC,eACAA,GADD,IAEFH,KAAyB,IAAnBG,EAAYH,WAzBe,+C,KAoD7C9C,KAAO,IAAIjB,EAAgCb,KAAKV,IAAIqC,W,mDC8GjD,IAAMqD,GAAc7E,aA3J3B,WAAyB,IAAD,EACgB8E,mBAAS,IADzB,mBACbC,EADa,KACDC,EADC,OAEsBF,mBAAgC,IAFtD,mBAEbG,EAFa,KAEGC,EAFH,KAGdC,EAAcC,mBAMpB,GAJAlD,qBAAU,WACNgC,GAAavC,KAAKQ,oBACnB,IAEC+B,GAAavC,KAAKf,UAClB,OAAO,cAACgB,EAAD,IAGX,GAAIsC,GAAavC,KAAKb,SAClB,OAAO,gJAGX,SAASuE,EAAgBxG,GACrB,OAAO,SAACyG,EAAmBC,GAApB,OAA0CC,OAAOF,EAAMzG,IAAM4G,cAAcD,OAAOD,EAAM1G,MA0DnG,SAAS6G,EAAqBC,GAC1B,MAAO,CACHC,eADG,YAC4E,IAA9DC,EAA6D,EAA7DA,gBAAiBC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,aACrD,OACI,sBAAKC,MAAO,CAAEC,QAAS,GAAvB,UACI,cAAC,IAAD,CACIC,IAAKhB,EACLiB,YAAW,sDAAcT,GACzBnH,MAAOsH,EAAa,GACpBO,SAAU,SAACC,GAAD,OAAOT,EAAgBS,EAAEC,OAAO/H,MAAQ,CAAC8H,EAAEC,OAAO/H,OAAS,KACrEgI,aAAc,kBAAMC,EAAaX,EAAcC,EAASJ,IACxD1F,UAAWC,KAAOiF,cAEtB,eAAC,KAAD,WACI,cAAC,IAAD,CACIvB,KAAK,UACLvD,QAAS,kBAAMoG,EAAaX,EAAcC,EAASJ,IACnDe,KAAM,cAACC,GAAA,EAAD,IACNC,KAAK,QACL3G,UAAWC,KAAO2G,aALtB,4CASA,cAAC,IAAD,CACIxG,QAAS,kBAyCrC,SAAqB2F,GACjBA,IACAhB,EAAc,IA3CyB8B,CAAYd,IAC3BY,KAAK,QACL3G,UAAWC,KAAO2G,aAHtB,qEAWhBE,WAjCG,SAiCQC,GACP,OAAO,cAACL,GAAA,EAAD,CAAgBV,MAAO,CAAEgB,MAAOD,EAAW,eAAYE,MAElEC,SAAU,SAAC3I,EAAY4I,GAAb,OACNA,EAAOzB,GAAayB,EAAOzB,GAAW0B,WAAWC,cAAcC,SAAS/I,EAAM8I,eAAiB,IACnGE,8BAA+B,SAACC,GACxBA,GACAnG,YAAW,kCAAM6D,EAAYuC,eAAlB,aAAM,EAAqBC,WAAU,MAGxDC,OA3CG,SA2CIxJ,GACH,OAAO6G,IAAmBU,EACtB,cAAC,KAAD,CACIkC,mBAAoB3H,KAAO4H,UAC3BC,YAAa,CAAChD,GACdiD,YAAU,EACVC,gBAAiB7J,EAAOA,EAAKiJ,WAAa,KAG9CjJ,IAMhB,SAASqI,EAAaX,EAAwBC,EAAqBJ,GAC/DI,IACAf,EAAcc,EAAa,IAC3BZ,EAAgBS,GAUpB,OACI,qBAAK1F,UAAWC,KAAOkC,QAAvB,SACI,cAAC,KAAD,CAAmB8F,WA3FhBhE,GAAavC,KAAKlC,KAAK4C,KAC1B,YAA0F,IAAvFoC,EAAsF,EAAtFA,KAAMN,EAAgF,EAAhFA,WAAYC,EAAoE,EAApEA,QAASM,EAA2D,EAA3DA,SAAUJ,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,WAAYzB,EAAa,EAAbA,OAClEoF,EAAU,IAAIC,KAAK3D,GACzB,MAAO,CACH5F,IAAKyF,EACL6D,UACA1D,KAAK,GAAD,OAAK0D,EAAQE,qBAAb,YAAqCF,EAAQG,sBACjDnE,aACAC,UACAM,WACA6D,UAAU,GAAD,OAAKhE,EAAL,YAA2BC,GACpCzB,aAgFwCyF,QAhI7C,CACH,CACIC,MAAO,2BACP9C,UAAW,OACX+C,OAAQ,SAACpD,EAAOC,GAAR,OAAkBoD,OAAOrD,EAAM6C,SAAWQ,OAAOpD,EAAM4C,WAJhE,aAOCM,MAAO,uCACP9C,UAAW,aACX+C,OAAQrD,EAAgB,eACrBK,EAAqB,eAVzB,aAaC+C,MAAO,uCACP9C,UAAW,UACX+C,OAAQrD,EAAgB,YACrBK,EAAqB,YAhBzB,aAmBC+C,MAAO,2BACP9C,UAAW,WACX+C,OAAQrD,EAAgB,aACrBK,EAAqB,aAE5B,CACI+C,MAAO,yDACP9C,UAAW,SACX+C,OAAQrD,EAAgB,WAE5B,CACIoD,MAAO,iKACP9C,UAAW,qBC1BZiD,OA1Bf,WAYI,OAXA1G,qBAAU,WACN,IAAMvC,EAAOf,EAAgC,QACxCe,EAGDT,EAAUY,QAAQH,GAFlBW,YAAS,UAKbpB,EAAU2J,kBACX,IAGC,sBAAK5I,UAAWC,IAAO4I,IAAvB,UACI,cAACvI,EAAD,IACA,eAAC,IAAD,CAAQN,UAAWC,IAAO6I,OAA1B,UACI,cAACjF,EAAD,CAAWkF,KAAK,MAChB,cAAC/G,EAAD,CAAS+G,KAAK,aACd,cAACnE,GAAD,CAAamE,KAAK,aAClB,cAACxG,EAAD,CAAOwG,KAAK,WACZ,cAAC/E,EAAD,CAAUgF,SAAO,YC/BT,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCpBQ,GACAC,YAAU,CACNC,kBADM,SACYC,GACdvI,WAAWuI,IAEfC,eAAgB,UAGpBxK,IAAMyK,SAASC,QAAU,mCAGrBC,IAASrC,OAAO,cAAC,GAAD,IAASsC,SAASC,cAAc,W,mBCpBpDnM,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,aAAe,kCAAkC,UAAY,kC","file":"static/js/main.084b7955.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__-bJlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courses\":\"Courses_courses__64gin\",\"course\":\"Courses_course__idhz6\",\"description\":\"Courses_description__2G3mt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"router\":\"App_router__3W9nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"PageSpinner_spinnerWrapper__2Kwx6\",\"indicator\":\"PageSpinner_indicator__1MURC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"AppHeader_appHeader__1rCT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2rzG3\"};","import axios from 'axios';\nimport { makeAutoObservable } from 'mobx';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\n\nenum UserType {\n    student = 'student',\n    teacher = 'teacher',\n}\nexport type IUser = {\n    id: string;\n    login: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    type: UserType;\n};\nfunction getApi() {\n    return {\n        async login({ login, password }: { login: string; password: string }) {\n            const res = await axios.post<IUser>('/api/login/', {\n                login,\n                password,\n            });\n            return res.data;\n        },\n    };\n}\n\nclass UserStoreClass {\n    api = getApi();\n    checkLogin = false;\n    user: IUser | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setUser(user: IUser | null) {\n        this.user = user;\n        LocalStorageSafe.setItem('user', this.user);\n    }\n\n    setCheckLogin() {\n        this.checkLogin = true;\n    }\n\n    async login({ login, password }: { login: string; password: string }) {\n        const user = await this.api.login({ login, password });\n        this.setUser(user);\n    }\n}\n\nexport const UserStore = new UserStoreClass();\n","export const JsonSafe = {\n    parse<T = unknown>(text: string, reviver?: (this: T, key: string, value: T) => T): T | null {\n        try {\n            return JSON.parse(text, reviver) as T;\n        } catch {\n            return null;\n        }\n    },\n\n    stringify<T = unknown>(\n        value: T,\n        replacer?: (this: T, key: string, value: T) => T,\n        space?: string | number,\n    ): string {\n        try {\n            return JSON.stringify(value, replacer, space) || '';\n        } catch {\n            return '';\n        }\n    },\n};\n","import { JsonSafe } from './JsonSafe';\n\nexport const LocalStorageSafe = {\n    getItem<T = unknown>(key: string): T | null {\n        try {\n            const item = localStorage.getItem(key);\n            if (item === null) {\n                return item;\n            }\n            return JsonSafe.parse<T>(item);\n        } catch {\n            return null;\n        }\n    },\n\n    setItem<T = unknown>(key: string, item: T) {\n        try {\n            localStorage.setItem(key, JsonSafe.stringify(item));\n        } catch {}\n    },\n};\n","import React from 'react';\nimport styles from 'src/components/User/User.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { UserStore } from 'src/stores/User';\nimport { Button } from 'antd';\nimport { navigate } from '@reach/router';\n\nfunction _User() {\n    const user = UserStore.user;\n\n    function onLogOut() {\n        UserStore.setUser(null);\n        navigate('/');\n    }\n\n    return (\n        <div className={styles.user}>\n            <div className={styles.email}>{user?.email}</div>\n            <Button className={styles.logOutButton} onClick={onLogOut}>\n                Выйти\n            </Button>\n        </div>\n    );\n}\n\nexport const User = observer(_User);\n","import { Link } from '@reach/router';\nimport React from 'react';\nimport styles from 'src/components/AppHeader/AppHeader.module.css';\nimport { UserStore } from 'src/stores/User';\nimport { observer } from 'mobx-react-lite';\nimport { User } from 'src/components/User/User';\n\nfunction _AppHeader() {\n    if (!UserStore.user) {\n        return null;\n    }\n\n    return (\n        <div className={styles.appHeader}>\n            <Link to=\"/courses\">Курсы</Link>\n            <Link to=\"/monitor\">Результат выполнения</Link>\n\n            <User />\n        </div>\n    );\n}\n\nexport const AppHeader = observer(_AppHeader);\n","import { makeAutoObservable } from 'mobx';\n\nexport class WithLoadingFlags<Result = unknown> {\n    isLoading = true;\n    isLoaded = false;\n    hasError = false;\n    // @ts-ignore\n    data: Result;\n    action: () => Promise<Result>;\n\n    constructor(action: () => Promise<Result>) {\n        this.action = action;\n        makeAutoObservable(this);\n    }\n\n    async load() {\n        try {\n            this.isLoading = true;\n            this.data = await this.action();\n            this.hasError = false;\n        } catch (error) {\n            console.error(error);\n            this.hasError = true;\n        } finally {\n            this.isLoaded = true;\n            this.isLoading = false;\n        }\n    }\n\n    loadIfNotLoaded() {\n        if (!this.isLoaded) {\n            this.load();\n        }\n    }\n}\n","export const AsyncHelper = {\n    delay(time: number) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, time);\n        });\n    },\n};\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport { AsyncHelper } from 'src/helpers/AsyncHelper';\n\nfunction getApi() {\n    return {\n        async loadList() {\n            await AsyncHelper.delay(1000);\n            return [\n                {\n                    name: 'Курс по PHP',\n                    description: 'php ето не сила',\n                },\n                {\n                    name: 'Курс по JS',\n                    description: 'js ето сила',\n                },\n                {\n                    name: 'Курс по C',\n                    description: 'C ето немножко сила',\n                },\n            ];\n        },\n    };\n}\n\ntype Course = {\n    name: string;\n    description: string;\n};\nclass CoursesStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags<Course[]>(this.api.loadList);\n}\n\nexport const CoursesStore = new CoursesStoreClass();\n","import React from 'react';\nimport styles from 'src/components/PageSpinner/PageSpinner.module.css';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nexport function PageSpinner() {\n    return (\n        <div className={styles.spinnerWrapper}>\n            <Spin indicator={<LoadingOutlined className={styles.indicator} spin />} />\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/Courses/Courses.module.css';\nimport { CoursesStore } from 'src/stores/Courses';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\n\nfunction _Courses() {\n    useEffect(() => {\n        CoursesStore.list.loadIfNotLoaded();\n    }, []);\n\n    if (CoursesStore.list.isLoading) {\n        return <PageSpinner />;\n    }\n\n    if (CoursesStore.list.hasError) {\n        return <>ошибка</>;\n    }\n\n    return (\n        <div className={styles.courses}>\n            {CoursesStore.list.data.map((course, index) => {\n                return (\n                    <div key={index} className={styles.course}>\n                        <div>{course.name}</div>\n                        <div className={styles.description}>{course.description}</div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport const Courses = observer<RouteComponentProps>(_Courses);\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/Login/Login.module.css';\nimport { Form, Input, Button, message } from 'antd';\nimport { observer } from 'mobx-react-lite';\nimport { navigate, RouteComponentProps } from '@reach/router';\nimport { UserStore } from 'src/stores/User';\n\ntype Values = {\n    login: string;\n    password: string;\n};\n\nfunction _Login() {\n    useEffect(() => {\n        if (UserStore.user) {\n            navigate('/');\n        }\n    }, [UserStore.user]);\n\n    async function onFinish(values: Values) {\n        try {\n            await UserStore.login(values);\n        } catch (error) {\n            console.info(error);\n            const statusText = error.response?.statusText;\n            const errorText = error.response?.status === 401 ? 'Пользователь не найден' : statusText || error.message;\n            message.error(`Не удалось войти. ${errorText}`);\n        }\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n\n    return (\n        <div className={styles.loginWrapper}>\n            <Form {...layout} name=\"basic\" onFinish={onFinish}>\n                <Form.Item\n                    label=\"Login\"\n                    name=\"login\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите login',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Пароль\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите пароль',\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Войти\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport const Login = observer<RouteComponentProps>(_Login);\n","import { Redirect, RouteComponentProps } from '@reach/router';\nimport React from 'react';\nimport { UserStore } from 'src/stores/User';\nimport { observer } from 'mobx-react-lite';\nimport { Spin } from 'antd';\n\nfunction _IndexPage() {\n    if (!UserStore.checkLogin) {\n        return <Spin />;\n    }\n    if (UserStore.checkLogin && !UserStore.user) {\n        return <Redirect to={'/login'} noThrow />;\n    }\n\n    return <Redirect to={'/courses'} noThrow />;\n}\n\nexport const IndexPage = observer<RouteComponentProps>(_IndexPage);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\n\nfunction _NotFound() {\n    return <div>Страница не найдена</div>;\n}\n\nexport const NotFound = observer<RouteComponentProps>(_NotFound);\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport { AsyncHelper } from 'src/helpers/AsyncHelper';\n\nfunction getApi() {\n    return {\n        async loadList(): Promise<MonitorData[]> {\n            await AsyncHelper.delay(1000);\n            return [\n                {\n                    student_id: 2,\n                    task_id: '2',\n                    status: TaskStatus.ok,\n                    id: '1',\n                    passed_tests_count: 10,\n                    test_count: 10,\n                    date: 1604090908,\n                    language: 'Python 3',\n                },\n                {\n                    student_id: 1,\n                    task_id: '2',\n                    status: TaskStatus.wa,\n                    id: '2',\n                    passed_tests_count: 0,\n                    test_count: 10,\n                    date: 1604090808,\n                    language: 'C++',\n                },\n            ].map((monitorData) => ({\n                ...monitorData,\n                date: monitorData.date * 1000,\n            }));\n        },\n    };\n}\n\nenum TaskStatus {\n    running = 'running',\n    stopped = 'stopped',\n    ce = 'ce',\n    re = 're',\n    tle = 'tle',\n    wa = 'wa',\n    ok = 'ok',\n}\nexport type MonitorData = {\n    id: string;\n    student_id: number;\n    task_id: string;\n    status: TaskStatus;\n    test_count: number;\n    passed_tests_count: number;\n    language: string;\n    date: number;\n};\nclass MonitorStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags<MonitorData[]>(this.api.loadList);\n}\n\nexport const MonitorStore = new MonitorStoreClass();\n","import { RouteComponentProps } from '@reach/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from 'src/components/MonitorPage/MonitorPage.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { MonitorStore } from 'src/components/MonitorPage/MonitorStore';\nimport { Button, Input, Space, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction _MonitorPage() {\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchColumn] = useState<keyof RecordType | ''>('');\n    const searchInput = useRef() as React.MutableRefObject<Input | null>;\n\n    useEffect(() => {\n        MonitorStore.list.loadIfNotLoaded();\n    }, []);\n\n    if (MonitorStore.list.isLoading) {\n        return <PageSpinner />;\n    }\n\n    if (MonitorStore.list.hasError) {\n        return <>Монитор не доступен</>;\n    }\n\n    function getStringSorter(key: keyof RecordType) {\n        return (data1: RecordType, data2: RecordType) => String(data1[key]).localeCompare(String(data2[key]));\n    }\n\n    function getColumns(): ColumnsType<RecordType> {\n        return [\n            {\n                title: 'Дата',\n                dataIndex: 'date',\n                sorter: (data1, data2) => Number(data1.dateObj) - Number(data2.dateObj),\n            },\n            {\n                title: 'Ученик',\n                dataIndex: 'student_id',\n                sorter: getStringSorter('student_id'),\n                ...getColumnSearchProps('student_id'),\n            },\n            {\n                title: 'Задача',\n                dataIndex: 'task_id',\n                sorter: getStringSorter('task_id'),\n                ...getColumnSearchProps('task_id'),\n            },\n            {\n                title: 'Язык',\n                dataIndex: 'language',\n                sorter: getStringSorter('language'),\n                ...getColumnSearchProps('language'),\n            },\n            {\n                title: 'Результат',\n                dataIndex: 'status',\n                sorter: getStringSorter('status'),\n            },\n            {\n                title: 'Количество пройденных тестов',\n                dataIndex: 'testCount',\n            },\n        ];\n    }\n\n    function getDataSource() {\n        return MonitorStore.list.data.map(\n            ({ date, student_id, task_id, language, id, passed_tests_count, test_count, status }) => {\n                const dateObj = new Date(date);\n                return {\n                    key: id,\n                    dateObj,\n                    date: `${dateObj.toLocaleDateString()} ${dateObj.toLocaleTimeString()}`,\n                    student_id,\n                    task_id,\n                    language,\n                    testCount: `${passed_tests_count}/${test_count}`,\n                    status,\n                };\n            },\n        );\n    }\n\n    function getColumnSearchProps(dataIndex: keyof RecordType) {\n        return {\n            filterDropdown({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) {\n                return (\n                    <div style={{ padding: 8 }}>\n                        <Input\n                            ref={searchInput}\n                            placeholder={`Поиск по ${dataIndex}`}\n                            value={selectedKeys[0]}\n                            onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                            className={styles.searchInput}\n                        />\n                        <Space>\n                            <Button\n                                type=\"primary\"\n                                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                                icon={<SearchOutlined />}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Поиск\n                            </Button>\n                            <Button\n                                onClick={() => handleReset(clearFilters)}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Сбросить\n                            </Button>\n                        </Space>\n                    </div>\n                );\n            },\n            filterIcon(filtered: boolean) {\n                return <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />;\n            },\n            onFilter: (value: any, record: any) =>\n                record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n            onFilterDropdownVisibleChange: (visible: boolean) => {\n                if (visible) {\n                    setTimeout(() => searchInput.current?.select(), 100);\n                }\n            },\n            render(text: string) {\n                return searchedColumn === dataIndex ? (\n                    <Highlighter\n                        highlightClassName={styles.highlight}\n                        searchWords={[searchText]}\n                        autoEscape\n                        textToHighlight={text ? text.toString() : ''}\n                    />\n                ) : (\n                    text\n                );\n            },\n        };\n    }\n\n    function handleSearch(selectedKeys: string[], confirm: () => void, dataIndex: keyof RecordType) {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchColumn(dataIndex);\n    }\n\n    function handleReset(clearFilters: () => void) {\n        clearFilters();\n        setSearchText('');\n    }\n\n    type RecordType = ReturnType<typeof getDataSource>[number];\n\n    return (\n        <div className={styles.courses}>\n            <Table<RecordType> dataSource={getDataSource()} columns={getColumns()} />\n        </div>\n    );\n}\n\nexport const MonitorPage = observer<RouteComponentProps>(_MonitorPage);\n","import React, { useEffect } from 'react';\nimport styles from 'src/App.module.css';\nimport 'src/App.css';\nimport { AppHeader } from 'src/components/AppHeader/AppHeader';\nimport { navigate, Router } from '@reach/router';\nimport { Courses } from 'src/components/Courses/Courses';\nimport { Login } from 'src/components/Login/Login';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nimport { IUser, UserStore } from 'src/stores/User';\nimport { IndexPage } from 'src/components/IndexPage/IndexPage';\nimport { NotFound } from 'src/components/NotFound/NotFound';\nimport { MonitorPage } from 'src/components/MonitorPage/MonitorPage';\n\nfunction App() {\n    useEffect(() => {\n        const user = LocalStorageSafe.getItem<IUser>('user');\n        if (!user) {\n            navigate('/login');\n        } else {\n            UserStore.setUser(user);\n        }\n\n        UserStore.setCheckLogin();\n    }, []);\n\n    return (\n        <div className={styles.app}>\n            <AppHeader />\n            <Router className={styles.router}>\n                <IndexPage path=\"/\" />\n                <Courses path=\"/courses\" />\n                <MonitorPage path=\"/monitor\" />\n                <Login path=\"/login\" />\n                <NotFound default />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { configure } from 'mobx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css';\nimport App from '../src/App';\nimport reportWebVitals from '../src/reportWebVitals';\nimport axios from 'axios';\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconfigure({\n    reactionScheduler(f) {\n        setTimeout(f); // https://habr.com/ru/company/mailru/blog/522312/#comment_22162136\n    },\n    enforceActions: 'never',\n});\n\naxios.defaults.baseURL = 'https://api.pseudocoders.online/';\n\nfunction renderApp() {\n    ReactDOM.render(<App />, document.querySelector('#root'));\n}\n\nrenderApp();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monitorPage\":\"MonitorPage_monitorPage__1qL6-\",\"searchInput\":\"MonitorPage_searchInput__HcXe0\",\"searchButton\":\"MonitorPage_searchButton__1iiQI\",\"highlight\":\"MonitorPage_highlight__z7Wk1\"};"],"sourceRoot":""}