{"version":3,"sources":["components/User/User.module.css","components/DefaultLayout/DefaultLayout.module.css","App.module.css","components/PageSpinner/PageSpinner.module.css","components/Login/Login.module.css","components/Create/Create.module.css","stores/User.ts","helpers/JsonSafe.ts","helpers/LocalStorageSafe.ts","helpers/StoreHelper.ts","components/Login/Login.tsx","components/PageSpinner/PageSpinner.tsx","components/NotFound/NotFound.tsx","components/WrapperUser/WrapperUser.tsx","components/User/User.tsx","components/DefaultLayout/logo.png","components/DefaultLayout/DefaultLayout.tsx","helpers/ArrayHelper.ts","components/TeacherPage/TeacherPage.tsx","stores/Create.ts","components/Create/TestBlock.tsx","components/Create/Create.tsx","components/Create/index.tsx","components/TeacherPage/TeacherTasks/TeacherTasks.tsx","components/TeacherPage/TeacherStudents/GroupStore.ts","stores/Task.ts","components/TeacherPage/TeacherStudents/GroupsPage.tsx","components/TeacherPage/TeacherStudents/TeacherStudents.tsx","components/TeacherPage/TeacherMonitor/MonitorStore.ts","components/TeacherPage/TeacherMonitor/MonitorPage.tsx","components/TeacherPage/TeacherMonitor/TeacherMonitor.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/TeacherPage/TeacherMonitor/MonitorPage.module.css","components/TeacherPage/TeacherStudents/GroupsPage.module.css"],"names":["module","exports","UserType","JsonSafe","text","reviver","JSON","parse","value","replacer","space","stringify","LocalStorageSafe","key","item","localStorage","getItem","setItem","WithLoadingFlags","action","isLoading","isLoaded","hasError","isConsumerInitialized","updateTimeoutId","interval","data","this","makeAutoObservable","console","error","load","tick","loadWithSavingState","bind","window","clearTimeout","func","setTimeout","sleep","ms","Promise","resolve","UserUtils","user","first_name","last_name","UserStore","api","login","password","axios","post","res","loadList","get","editorStatus","userId","startEditor","status","stopEditor","checkLogin","editor","list","setUser","setEditor","Login","observer","values","a","info","statusText","response","errorText","message","useEffect","navigate","className","styles","loginWrapper","labelCol","span","wrapperCol","name","onFinish","Item","label","rules","required","Password","offset","type","htmlType","PageSpinner","spinnerWrapper","indicator","LoadingOutlined","spin","NotFound","useState","notFound","setNotFound","isMounted","useRef","current","WrapperUser","children","to","noThrow","User","isEditorRunning","editorButtonMessage","isEditorChanging","id","email","editorButton","onClick","danger","loading","logOutButton","Header","Layout","Content","Footer","DefaultLayout","indexMenuItem","menuItems","setIndexMenuItem","theme","mode","defaultSelectedKeys","alt","logo","src","map","index","path","title","content","footer","ArrayHelper","array","filter","Boolean","TeacherPage","port","getMenuItems","startIndexMenuItem","findIndex","Error","HOST_API","CreateStore","loadLanguages","fetch","method","ok","json","saveTask","log","body","languages","saveProcess","saveStatus","lang","setLanguages","TextArea","Input","TestBlock","input","output","idx","onChangeTests","onDelete","onChange","useCallback","e","target","testHide","removeButton","icon","CloseOutlined","shape","test","file","fileName","rows","Option","Select","modules","toolbar","header","color","indent","formats","localStorageName","localStorageDescription","localStorageLanguages","localStorageTests","localStorageSave","saveInLocalStorage","getLocalStorageValue","nameLocalStorage","defaultValue","valueString","Create","getLanguages","onSaveTask","description","tests","forEach","removeItem","setDescription","setTests","setName","debouncedSaveInLocalStorage","useDebouncedCallback","nameVariable","onChangeName","callback","onChangeDescription","onChangeLanguages","nameFile","newTests","addTest","removeTest","_","i","tagsLanguages","useMemo","language","slug","createTask","container","length","languges","langugesTitle","selectLanguages","size","placeholder","style","minWidth","marginBottom","addonBefore","preview","paragraph","padding","dangerouslySetInnerHTML","__html","addButton","PlusOutlined","saveButtonBlock","SaveOutlined","TeacherCreateTask","TeacherTasks","margin","href","GroupStore","createGroup","editGroup","patch","group","TaskStore","GroupsPage","localStorageCurrentGroupKey","currentGroup","setCurrentGroup","visibleCreateGroupModal","setVisibleCreateGroupModal","visibleEditGroupModal","setVisibleEditGroupModal","isEditMode","currentGroupId","find","waitDefaultGroup","handleChange","curGroup","onCreate","studentIds","taskIds","users","tasks","owner","Math","random","successText","success","onCancel","groups","initialValues","undefined","visible","destroyOnClose","task","renderCreateGroupModal","subHeader","options","width","renderDropdownGroups","studentsAndTasks","locale","emptyText","students","itemLayout","dataSource","includes","renderItem","TaskStatus","TeacherStudents","MonitorStore","sort","md1","md2","date","MonitorPage","searchText","setSearchText","searchedColumn","setSearchColumn","searchInput","addConsumer","removeConsumer","getStringSorter","data1","data2","String","localeCompare","getStatusString","percent","running","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","onPressEnter","handleSearch","SearchOutlined","searchButton","handleReset","filterIcon","filtered","onFilter","record","toString","toLowerCase","onFilterDropdownVisibleChange","select","render","highlightClassName","highlight","searchWords","autoEscape","textToHighlight","courses","passed_tests_count","tests_count","dateObj","Date","round","toLocaleDateString","toLocaleTimeString","userName","taskName","testCount","columns","sorter","Number","TeacherMonitor","App","setCheckLogin","IndexComponent","app","router","teacher","default","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","configure","reactionScheduler","f","enforceActions","defaults","baseURL","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.2077180e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__-bJlS\",\"editorButton\":\"User_editorButton__XCQJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DefaultLayout_content__3epWu\",\"footer\":\"DefaultLayout_footer__2qlk-\",\"logo\":\"DefaultLayout_logo__3goRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"router\":\"App_router__3W9nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"PageSpinner_spinnerWrapper__2Kwx6\",\"indicator\":\"PageSpinner_indicator__1MURC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2rzG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"removeButton\":\"Create_removeButton__1mZ_X\",\"container\":\"Create_container__1yu4s\",\"title\":\"Create_title__ZXhrt\",\"description\":\"Create_description__2Smnj\",\"preview\":\"Create_preview__2PFoA\",\"paragraph\":\"Create_paragraph__KTCat\",\"languges\":\"Create_languges__134fL\",\"langugesTitle\":\"Create_langugesTitle__AMecW\",\"selectLanguages\":\"Create_selectLanguages__38_Df\",\"file\":\"Create_file__26DrL\",\"fileName\":\"Create_fileName__3Rrmi\",\"testHide\":\"Create_testHide__32DBf\",\"addButton\":\"Create_addButton__1RMIv\",\"saveButtonBlock\":\"Create_saveButtonBlock__PczEz\",\"test\":\"Create_test__1p6Hi\"};","import axios from 'axios';\nimport { makeAutoObservable } from 'mobx';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nimport { WithLoadingFlags } from 'src/helpers/StoreHelper';\n\nfunction sleep(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport enum UserType {\n    student = 'student',\n    teacher = 'teacher',\n}\n\nexport type IUser = {\n    id: number;\n    login: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    type: UserType;\n};\n\nexport type SimpleUser = Pick<IUser, 'id' | 'login' | 'last_name' | 'first_name'>;\n\nexport type IEditor = {\n    status: 'running' | 'exited';\n    port?: number;\n    isLoading?: boolean;\n};\n\nfunction getApi() {\n    return {\n        async login({ login, password }: { login: string; password: string }) {\n            const res = await axios.post<IUser>('/api/login/', {\n                login,\n                password,\n            });\n            return res.data;\n        },\n        async loadList() {\n            const res = await axios.get<IUser[]>('/api/users/');\n\n            return res.data;\n        },\n\n        async editorStatus(userId: number) {\n            const res = await axios.get<IEditor>(`/tasks/editor/${userId}/status/`);\n\n            return res.data;\n        },\n\n        async startEditor(userId: number) {\n            await axios.post(`/tasks/editor/${userId}/start/`);\n\n            let res: IEditor = await this.editorStatus(userId);\n            while (res?.status !== 'running') {\n                await sleep(1000);\n                res = await this.editorStatus(userId);\n            }\n\n            return res;\n        },\n\n        async stopEditor(userId: number) {\n            await axios.post(`/tasks/editor/${userId}/stop/`);\n\n            let res: IEditor = await this.editorStatus(userId);\n            while (res?.status !== 'exited') {\n                await sleep(1000);\n                res = await this.editorStatus(userId);\n            }\n\n            return res;\n        },\n    };\n}\n\nclass UserStoreClass {\n    api = getApi();\n    checkLogin = false;\n    user: IUser | null = null;\n    editor: IEditor | null = null;\n\n    list = new WithLoadingFlags<IUser[]>(this.api.loadList);\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setUser(user: IUser | null) {\n        this.user = user;\n        LocalStorageSafe.setItem('user', this.user);\n    }\n\n    setEditor(editor: IEditor | null) {\n        this.editor = editor;\n    }\n\n    setCheckLogin() {\n        this.checkLogin = true;\n    }\n\n    async login({ login, password }: { login: string; password: string }) {\n        const user = await this.api.login({ login, password });\n        this.setUser(user);\n    }\n\n    async editorStatus(userId: number) {\n        const editor = await this.api.editorStatus(userId);\n        this.setEditor(editor);\n    }\n\n    async startEditor(userId: number) {\n        if (this.editor) {\n            this.setEditor({ ...this.editor, isLoading: true });\n        }\n\n        const editor = await this.api.startEditor(userId);\n        this.setEditor(editor);\n    }\n\n    async stopEditor(userId: number) {\n        if (this.editor) {\n            this.setEditor({ ...this.editor, isLoading: true });\n        }\n\n        const editor = await this.api.stopEditor(userId);\n        this.setEditor(editor);\n    }\n}\n\nexport const UserUtils = {\n    getFullName(user: SimpleUser) {\n        return `${user.first_name} ${user.last_name}`;\n    },\n};\n\nexport const UserStore = new UserStoreClass();\n","export const JsonSafe = {\n    parse<T = unknown>(text: string, reviver?: (this: T, key: string, value: T) => T): T | null {\n        try {\n            return JSON.parse(text, reviver) as T;\n        } catch {\n            return null;\n        }\n    },\n\n    stringify<T = unknown>(\n        value: T,\n        replacer?: (this: T, key: string, value: T) => T,\n        space?: string | number,\n    ): string {\n        try {\n            return JSON.stringify(value, replacer, space) || '';\n        } catch {\n            return '';\n        }\n    },\n};\n","import { JsonSafe } from './JsonSafe';\n\nexport const LocalStorageSafe = {\n    getItem<T = unknown>(key: string): T | null {\n        try {\n            const item = localStorage.getItem(key);\n            if (item === null) {\n                return item;\n            }\n            return JsonSafe.parse<T>(item);\n        } catch {\n            return null;\n        }\n    },\n\n    setItem<T = unknown>(key: string, item: T) {\n        try {\n            localStorage.setItem(key, JsonSafe.stringify(item));\n        } catch {}\n    },\n};\n","import { makeAutoObservable } from 'mobx';\n\nexport class WithLoadingFlags<Result = unknown> {\n    isLoading = true;\n    isLoaded = false;\n    hasError = false;\n    isConsumerInitialized = false;\n    updateTimeoutId: number | null = null;\n    interval = 3000;\n    // @ts-ignore\n    data: Result;\n    action: () => Promise<Result>;\n\n    constructor(action: () => Promise<Result>) {\n        this.action = action;\n        makeAutoObservable(this);\n    }\n\n    async load() {\n        try {\n            this.isLoading = true;\n            this.data = await this.action();\n            this.hasError = false;\n        } catch (error) {\n            console.error(error);\n            this.hasError = true;\n        } finally {\n            this.isLoaded = true;\n            this.isLoading = false;\n        }\n    }\n\n    async loadWithSavingState() {\n        try {\n            this.data = await this.action();\n            this.hasError = false;\n        } catch (error) {\n            console.error(error);\n            this.hasError = true;\n        } finally {\n            this.isLoaded = true;\n            this.isLoading = false;\n        }\n    }\n\n    async loadIfNotLoaded() {\n        if (!this.isLoaded) {\n            await this.load();\n        }\n    }\n\n    async addConsumer() {\n        if (this.isConsumerInitialized) {\n            return;\n        }\n\n        this.isConsumerInitialized = true;\n\n        await this.tick(this.loadWithSavingState.bind(this));\n    }\n\n    removeConsumer() {\n        this.isConsumerInitialized = false;\n        this.updateTimeoutId && window.clearTimeout(this.updateTimeoutId);\n    }\n\n    async tick(func: () => void) {\n        await func();\n\n        this.updateTimeoutId && window.clearTimeout(this.updateTimeoutId);\n\n        if (!this.isConsumerInitialized) {\n            return;\n        }\n\n        this.updateTimeoutId = window.setTimeout(() => this.tick(func), this.interval);\n    }\n}\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/Login/Login.module.css';\nimport { Form, Input, Button, message } from 'antd';\nimport { observer } from 'mobx-react-lite';\nimport { navigate, RouteComponentProps } from '@reach/router';\nimport { UserStore } from 'src/stores/User';\n\ntype Values = {\n    login: string;\n    password: string;\n};\n\nfunction _Login() {\n    useEffect(() => {\n        if (UserStore.user) {\n            navigate('/');\n        }\n    }, [UserStore.user]);\n\n    async function onFinish(values: Values) {\n        try {\n            await UserStore.login(values);\n        } catch (error) {\n            console.info(error);\n            const statusText = error.response?.statusText;\n            const errorText = error.response?.status === 401 ? 'Пользователь не найден' : statusText || error.message;\n            message.error(`Не удалось войти. ${errorText}`);\n        }\n    }\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n\n    return (\n        <div className={styles.loginWrapper}>\n            <Form {...layout} name=\"basic\" onFinish={onFinish}>\n                <Form.Item\n                    label=\"Login\"\n                    name=\"login\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите login',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Пароль\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Введите пароль',\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Войти\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport const Login = observer<RouteComponentProps>(_Login);\n","import React from 'react';\nimport styles from 'src/components/PageSpinner/PageSpinner.module.css';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nexport function PageSpinner() {\n    return (\n        <div className={styles.spinnerWrapper}>\n            <Spin indicator={<LoadingOutlined className={styles.indicator} spin />} />\n        </div>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\n\nfunction _NotFound() {\n    const [notFound, setNotFound] = useState(false);\n    const isMounted = useRef(false);\n\n    useEffect(() => {\n        isMounted.current = true;\n        setTimeout(() => {\n            if (isMounted.current) {\n                setNotFound(true);\n            }\n        }, 5000);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    return notFound ? <>Страница не найдена</> : <PageSpinner />;\n}\n\nexport const NotFound = observer<RouteComponentProps>(_NotFound);\n","import { Redirect, RouteComponentProps } from '@reach/router';\nimport React from 'react';\nimport { UserStore } from 'src/stores/User';\nimport { observer } from 'mobx-react-lite';\nimport { Spin } from 'antd';\n\ninterface IWrapperUser {\n    children: React.ReactElement;\n}\n\ntype TWrapperUserObserver = IWrapperUser & RouteComponentProps;\n\nfunction _WrapperUser({ children }: IWrapperUser) {\n    if (!UserStore.checkLogin) {\n        return <Spin />;\n    }\n    if (UserStore.checkLogin && !UserStore.user) {\n        return <Redirect to={'/login'} noThrow />;\n    }\n\n    return children;\n}\n\nexport const WrapperUser = observer<TWrapperUserObserver>(_WrapperUser);\n","import React, { useEffect } from 'react';\nimport styles from 'src/components/User/User.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { UserStore } from 'src/stores/User';\nimport { Button } from 'antd';\nimport { navigate } from '@reach/router';\n\nfunction _User() {\n    const user = UserStore.user;\n    const editor = UserStore.editor;\n    const isEditorRunning = editor?.status === 'running';\n    const editorButtonMessage = isEditorRunning ? 'Остановить редактор' : 'Запустить редактор';\n    const isEditorChanging = editor?.isLoading;\n\n    useEffect(() => {\n        if (user) {\n            UserStore.editorStatus(user.id);\n        }\n    }, []);\n\n    function onLogOut() {\n        UserStore.setUser(null);\n        navigate('/');\n    }\n\n    function onStart() {\n        if (user) {\n            UserStore.startEditor(user.id);\n        }\n    }\n\n    function onStop() {\n        if (user) {\n            UserStore.stopEditor(user.id);\n        }\n    }\n\n    return (\n        <div className={styles.user}>\n            <div className={styles.email}>{user?.email}</div>\n            <Button\n                className={styles.editorButton}\n                onClick={isEditorRunning ? onStop : onStart}\n                danger={isEditorRunning}\n                loading={isEditorChanging}\n            >\n                {editorButtonMessage}\n            </Button>\n            <Button className={styles.logOutButton} onClick={onLogOut}>\n                Выйти\n            </Button>\n        </div>\n    );\n}\n\nexport const User = observer(_User);\n","export default __webpack_public_path__ + \"static/media/logo.c8be1847.png\";","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { navigate } from '@reach/router';\n\nimport { User } from 'src/components/User/User';\n\nimport logo from 'src/components/DefaultLayout/logo.png';\nimport styles from 'src/components/DefaultLayout/DefaultLayout.module.css';\n\nconst { Header, Content, Footer } = Layout;\n\ninterface IMenuItem {\n    title: string;\n    path: string;\n}\n\ninterface IDefaultLayout {\n    children: React.ReactNode;\n    indexMenuItem: number;\n    menuItems: IMenuItem[];\n    setIndexMenuItem: (index: number) => void;\n}\n\nexport function DefaultLayout({ children, indexMenuItem, menuItems, setIndexMenuItem }: IDefaultLayout) {\n    return (\n        <Layout>\n            <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[`${indexMenuItem}`]}>\n                    <Menu.Item key=\"logo\">\n                        <img alt=\"logo\" className={styles.logo} src={logo} />\n                    </Menu.Item>\n                    {menuItems.map((item, index) => (\n                        <Menu.Item\n                            key={`${index}`}\n                            onClick={() => {\n                                setIndexMenuItem(index);\n                                navigate(item.path);\n                            }}\n                        >\n                            {item.title}\n                        </Menu.Item>\n                    ))}\n                    <User />\n                </Menu>\n            </Header>\n            <Content className={styles.content}>{children}</Content>\n            <Footer className={styles.footer}>Pseudocoders ©2020</Footer>\n        </Layout>\n    );\n}\n","export const ArrayHelper = {\n    clearNullable<T>(array: T[]) {\n        return array.filter(Boolean) as Exclude<T, false | undefined | null | 0 | ''>[];\n    },\n};\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { DefaultLayout } from 'src/components/DefaultLayout/DefaultLayout';\nimport { UserStore } from 'src/stores/User';\nimport { ArrayHelper } from 'src/helpers/ArrayHelper';\n\ninterface ITeacherPage {\n    path: string;\n    children: React.ReactNode;\n}\n\nfunction _TeacherPage({ path, children }: ITeacherPage) {\n    function getMenuItems() {\n        return ArrayHelper.clearNullable([\n            {\n                title: 'Задачи',\n                path: 'tasks',\n            },\n            {\n                title: 'Ученики',\n                path: 'students',\n            },\n            {\n                title: 'Монитор',\n                path: 'monitoring',\n            },\n            UserStore.editor?.status === 'running' && {\n                title: 'Редактор',\n                path: `http://api.pseudocoders.online:${UserStore.editor.port}`,\n            },\n        ]);\n    }\n\n    const menuItems = getMenuItems();\n    const startIndexMenuItem = menuItems.findIndex((item) => item.path === path);\n\n    if (startIndexMenuItem === -1) {\n        throw new Error('invalid path');\n    }\n\n    const [indexMenuItem, setIndexMenuItem] = useState(startIndexMenuItem);\n\n    return (\n        <DefaultLayout menuItems={menuItems} indexMenuItem={indexMenuItem} setIndexMenuItem={setIndexMenuItem}>\n            {children}\n        </DefaultLayout>\n    );\n}\n\nexport const TeacherPage = observer(_TeacherPage);\n","import { makeAutoObservable } from 'mobx';\n\nexport interface Language {\n    name: string;\n    slug: string;\n    id: string;\n}\n\nconst HOST_API = 'http://api.pseudocoders.online/api/';\n\nfunction getApi() {\n    return {\n        async loadLanguages() {\n            const response = await fetch(`${HOST_API}languages/`, { method: 'get' });\n            if (response.ok) {\n                return response.json();\n            }\n        },\n\n        async saveTask(data: any) {\n            console.log(JSON.stringify(data));\n            const response = await fetch(`${HOST_API}tasks/`, { method: 'post', body: JSON.stringify(data) });\n            return response.status;\n        },\n    };\n}\n\nclass CreateStoreClass {\n    api = getApi();\n    languages = [];\n    saveProcess = false;\n    saveStatus = 0;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setLanguages(languages: any) {\n        this.languages = languages;\n    }\n\n    async getLanguages() {\n        const lang = await this.api.loadLanguages();\n        this.setLanguages(lang);\n    }\n\n    async saveTask(data: any) {\n        this.saveProcess = true;\n        const status = await this.api.saveTask(data);\n        this.saveProcess = false;\n        this.saveStatus = status;\n    }\n}\n\nexport const CreateStore = new CreateStoreClass();\n","import React, { useCallback } from 'react';\nimport styles from 'src/components/Create/Create.module.css';\nimport { Button, Input } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\nconst { TextArea } = Input;\n\nconst TestBlock = ({ input, output, idx, onChangeTests, onDelete }: any) => {\n    const onChange = useCallback(\n        (name: 'input' | 'output') => (e: any) => {\n            onChangeTests(e.target.value, idx, name);\n        },\n        [],\n    );\n\n    return (\n        <>\n            <p className={styles.testHide}>\n                Тест {idx + 1}\n                <Button\n                    className={styles.removeButton}\n                    onClick={onDelete}\n                    icon={<CloseOutlined />}\n                    shape=\"circle\"\n                    danger\n                />\n            </p>\n            <div className={styles.test}>\n                <div className={styles.file}>\n                    <p className={styles.fileName}>input.txt</p>\n                    <TextArea value={input} rows={4} onChange={onChange('input')} />\n                </div>\n                <div className={styles.file}>\n                    <p className={styles.fileName}>output.txt</p>\n                    <TextArea value={output} rows={4} onChange={onChange('output')} />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default TestBlock;\n","import React, { useMemo, useCallback, useEffect, useState } from 'react';\nimport styles from 'src/components/Create/Create.module.css';\nimport { CreateStore, Language } from 'src/stores/Create';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from '@reach/router';\nimport ReactQuill from 'react-quill';\nimport { Input, Select, Button } from 'antd';\nimport { PlusOutlined, SaveOutlined } from '@ant-design/icons';\nimport 'react-quill/dist/quill.snow.css';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport TestBlock from './TestBlock';\n\nconst { Option } = Select;\n\nconst modules = {\n    toolbar: [\n        [{ header: [1, 2, false] }],\n        [\n            {\n                color: [\n                    '#FFFFFF',\n                    '#000000',\n                    '#3072C4',\n                    '#228007',\n                    '#CE0014',\n                    '#D97E00',\n                    '#7A1871',\n                    '#F2F2F2',\n                    '#808080',\n                    '#1D85D0',\n                    '#3F9726',\n                    '#D70C17',\n                    '#F69C00',\n                    '#B254AA',\n                ],\n            },\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'blockquote',\n        ],\n        [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n        ['link', 'image', 'code'],\n        ['clean'],\n    ],\n};\n\nconst formats = [\n    'header',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'indent',\n    'link',\n    'image',\n    'code',\n    'color',\n];\n\nconst localStorageName = 'TASK_NAME';\nconst localStorageDescription = 'TASK_DESCRIPTION';\nconst localStorageLanguages = 'TASK_LANGUAGES';\nconst localStorageTests = 'TASK_TESTS';\nconst localStorageSave = 'IS_SAVE';\n\nconst saveInLocalStorage = (name: string, value: string) => {\n    localStorage.setItem(name, JSON.stringify(value));\n};\n\nconst getLocalStorageValue = (nameLocalStorage: string, defaultValue: any = '') => {\n    const valueString = localStorage.getItem(nameLocalStorage);\n    if (valueString) {\n        return JSON.parse(valueString);\n    }\n\n    return defaultValue;\n};\n\ninterface Test {\n    input?: string;\n    output?: string;\n}\n\nexport type ChangeTests = (value: string, index: number, nameFile: 'input' | 'output') => void;\n\nfunction _Create() {\n    useEffect(() => {\n        (async () => {\n            await CreateStore.getLanguages();\n        })();\n    }, []);\n\n    const onSaveTask = useCallback(() => {\n        CreateStore.saveTask({\n            name: getLocalStorageValue(localStorageName),\n            languages: getLocalStorageValue(localStorageLanguages),\n            description: getLocalStorageValue(localStorageDescription),\n            tests: getLocalStorageValue(localStorageTests),\n        });\n        saveInLocalStorage(localStorageSave, 'on');\n    }, []);\n\n    useEffect(() => {\n        if (getLocalStorageValue(localStorageSave) === 'on') {\n            console.log('saveProcess', CreateStore.saveProcess, CreateStore.saveStatus);\n            if (!CreateStore.saveProcess && CreateStore.saveStatus === 200) {\n                const keys = [\n                    localStorageName,\n                    localStorageDescription,\n                    localStorageLanguages,\n                    localStorageTests,\n                    localStorageSave,\n                ];\n                keys.forEach((key) => {\n                    localStorage.removeItem(key);\n                });\n            } else {\n                console.log('error', CreateStore.saveStatus);\n            }\n        }\n    }, [CreateStore.saveProcess, CreateStore.saveStatus]);\n\n    const [description, setDescription] = useState(getLocalStorageValue(localStorageDescription));\n\n    const [tests, setTests] = useState<Test[]>(getLocalStorageValue(localStorageTests, [{ input: '', output: '' }]));\n\n    const [name, setName] = useState(getLocalStorageValue(localStorageName));\n\n    const [languages, setLanguages] = useState(getLocalStorageValue(localStorageLanguages, []));\n\n    const debouncedSaveInLocalStorage = useDebouncedCallback((nameVariable, value) => {\n        saveInLocalStorage(nameVariable, value);\n    }, 300);\n\n    const onChangeName = useCallback(\n        (e) => {\n            const value = e.target.value;\n            setName(value);\n            debouncedSaveInLocalStorage.callback(localStorageName, value);\n        },\n        [setName],\n    );\n\n    const onChangeDescription = useCallback(\n        (value) => {\n            setDescription(value);\n            debouncedSaveInLocalStorage.callback(localStorageDescription, value);\n        },\n        [setDescription],\n    );\n\n    const onChangeLanguages = useCallback((value) => {\n        setLanguages(value);\n        debouncedSaveInLocalStorage.callback(localStorageLanguages, value);\n    }, []);\n\n    const onChangeTests: ChangeTests = useCallback(\n        (value: string, index: number, nameFile: 'input' | 'output') => {\n            const newTests = [...tests];\n            console.log(index, newTests);\n            newTests[index][nameFile] = value;\n\n            setTests(newTests);\n            debouncedSaveInLocalStorage.callback(localStorageTests, newTests);\n        },\n        [tests],\n    );\n\n    const addTest = useCallback(() => {\n        setTests([...tests, { input: '', output: '' }]);\n    }, [setTests, tests]);\n\n    const removeTest = (idx: number) => {\n        return () => {\n            setTests(tests.filter((_, i) => i !== idx));\n        };\n    };\n\n    const tagsLanguages = useMemo(\n        () =>\n            CreateStore.languages.map((language: Language) => (\n                <Option value={language.slug} key={language.slug}>\n                    {language.name}\n                </Option>\n            )),\n        [CreateStore.languages],\n    );\n\n    return (\n        <div className={styles.createTask}>\n            <div className={styles.container}>\n                <h1 className={styles.title}>Создание задачи</h1>\n                <p className={styles.description}>\n                    Добавьте заголовок и описание задачи. Для красочности вы можете использовать разные цвета, добавлять\n                    картинки, списки и код.\n                </p>\n                {CreateStore.languages.length && (\n                    <div className={styles.languges}>\n                        <div className={styles.langugesTitle}>ЯЗЫКИ ПРОГРАММИРОВАНИЯ</div>\n                        <Select\n                            className={styles.selectLanguages}\n                            mode=\"tags\"\n                            size=\"middle\"\n                            placeholder=\"Please select\"\n                            defaultValue={languages}\n                            onChange={onChangeLanguages}\n                            style={{ minWidth: '200px' }}\n                        >\n                            {tagsLanguages}\n                        </Select>\n                    </div>\n                )}\n                <div style={{ marginBottom: 16 }}>\n                    <Input\n                        value={name}\n                        onChange={onChangeName}\n                        addonBefore=\"НАЗВАНИЕ ЗАДАЧИ\"\n                        placeholder=\"Бифштексы...\"\n                    />\n                </div>\n                <div className=\"text-editor\">\n                    <ReactQuill\n                        theme=\"snow\"\n                        modules={modules}\n                        formats={formats}\n                        value={description}\n                        onChange={onChangeDescription}\n                    />\n                </div>\n                {(description || name) && (\n                    <div className={styles.preview}>\n                        <h3 className={styles.paragraph}>Предпросмотр</h3>\n                        <h2>{name}</h2>\n                        <div\n                            style={{ padding: 0 }}\n                            className=\"ql-editor\"\n                            dangerouslySetInnerHTML={{ __html: description }}\n                        />\n                    </div>\n                )}\n\n                <h3 className={styles.paragraph}>Добавить тесты</h3>\n                {tests.map((item: Test, idx: number) => (\n                    <TestBlock key={idx} idx={idx} {...item} onChangeTests={onChangeTests} onDelete={removeTest(idx)} />\n                ))}\n                <Button className={styles.addButton} onClick={addTest} icon={<PlusOutlined />}>\n                    Добавить тест\n                </Button>\n                <div className={styles.saveButtonBlock}>\n                    <Button\n                        type=\"primary\"\n                        // disabled={CreateStore.saveProcess}\n                        onClick={onSaveTask}\n                        icon={<SaveOutlined />}\n                    >\n                        Сохранить задачу\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport const Create = observer<RouteComponentProps>(_Create);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { Create } from './Create';\n\nfunction _TeacherCreateTask() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"tasks\">\n                <Create />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherCreateTask = observer<RouteComponentProps>(_TeacherCreateTask);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\n\nfunction _TeacherTasks() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"tasks\">\n                <div style={{ margin: 20 }}>\n                    <a href=\"/create\">Создать задачу</a>\n                </div>\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherTasks = observer<RouteComponentProps>(_TeacherTasks);\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport axios from 'axios';\nimport { makeAutoObservable } from 'mobx';\n\ntype CreateGroupData = Omit<Group, 'id'>;\ntype EditGroupData = Partial<Omit<Group, 'id'>>;\n\nfunction getApi() {\n    return {\n        async loadList() {\n            const res = await axios.get<Group[]>('api/groups/');\n            return res.data;\n        },\n        async createGroup(data: CreateGroupData) {\n            const res = await axios.post('api/groups/', data);\n            return res.data;\n        },\n        async editGroup(id: number, data: EditGroupData) {\n            const res = await axios.patch(`api/groups/${id}/`, data);\n            return res.data;\n        },\n    };\n}\n\nexport type Group = {\n    id: number;\n    name: string;\n    owner: number;\n    slug: string;\n    tasks: number[];\n    users: number[];\n};\nclass GroupStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags(this.api.loadList);\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    async createGroup(data: CreateGroupData) {\n        this.isLoading = true;\n        const group = await this.api.createGroup(data);\n        await this.list.loadWithSavingState();\n        this.isLoading = false;\n        return group;\n    }\n\n    async editGroup(id: number, data: EditGroupData) {\n        this.isLoading = true;\n        const group = await this.api.editGroup(id, data);\n        await this.list.loadWithSavingState();\n        this.isLoading = false;\n        return group;\n    }\n}\n\nexport const GroupStore = new GroupStoreClass();\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport axios from 'axios';\n\nfunction getApi() {\n    return {\n        async loadList() {\n            const res = await axios.get<Task[]>('/api/tasks/');\n\n            return res.data;\n        },\n    };\n}\n\nexport type Task = {\n    id: number;\n    name: string;\n    slug: string;\n};\nclass TaskStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags<Task[]>(this.api.loadList);\n}\n\nexport const TaskStore = new TaskStoreClass();\n","import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Group, GroupStore } from 'src/components/TeacherPage/TeacherStudents/GroupStore';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\nimport styles from './GroupsPage.module.css';\nimport { Form, List, Select, PageHeader, Button, Modal, Input, message } from 'antd';\nimport { UserStore, UserUtils } from 'src/stores/User';\nimport { TaskStore } from 'src/stores/Task';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nconst { Option } = Select;\n\ntype Values = {\n    name: string;\n    studentIds: number[];\n    taskIds: number[];\n};\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction _GroupsPage() {\n    const localStorageCurrentGroupKey = 'currentGroupId';\n    const [currentGroup, setCurrentGroup] = useState<Group>();\n    const [visibleCreateGroupModal, setVisibleCreateGroupModal] = useState(false);\n    const [visibleEditGroupModal, setVisibleEditGroupModal] = useState(false);\n    const isEditMode = visibleEditGroupModal;\n\n    useEffect(() => {\n        waitDefaultGroup();\n    }, []);\n\n    async function waitDefaultGroup() {\n        const currentGroupId = LocalStorageSafe.getItem<number>(localStorageCurrentGroupKey);\n        let currentGroup = GroupStore.list.data?.find((group) => group.id === currentGroupId);\n        currentGroup && setCurrentGroup(currentGroup);\n        await GroupStore.list.loadWithSavingState();\n        await UserStore.list.loadWithSavingState();\n        await TaskStore.list.loadWithSavingState();\n        if (!currentGroup) {\n            currentGroup = currentGroupId\n                ? GroupStore.list.data.find((group) => group.id === currentGroupId)\n                : GroupStore.list.data?.[0];\n        }\n        setCurrentGroup(currentGroup);\n    }\n\n    if (GroupStore.list.isLoading || UserStore.list.isLoading || TaskStore.list.isLoading || !currentGroup) {\n        return <PageSpinner />;\n    }\n\n    if (GroupStore.list.hasError) {\n        return <>Группы недоступны</>;\n    }\n\n    function renderDropdownGroups() {\n        const options = GroupStore.list.data.map((group) => {\n            return (\n                <Option key={group.id} value={group.id}>\n                    {group.name}\n                </Option>\n            );\n        });\n        return (\n            <Form.Item label=\"Группа учеников\">\n                <Select value={currentGroup?.id} style={{ width: 300 }} onChange={handleChange}>\n                    {options}\n                </Select>\n            </Form.Item>\n        );\n    }\n\n    function handleChange(value: number) {\n        const curGroup = GroupStore.list.data.find((group) => group.id === value);\n        setCurrentGroup(curGroup);\n        LocalStorageSafe.setItem(localStorageCurrentGroupKey, curGroup?.id);\n    }\n\n    async function onCreate(values: Values) {\n        const { name, studentIds, taskIds } = values;\n        try {\n            let group = null;\n            if (isEditMode) {\n                group = await GroupStore.editGroup(currentGroup!.id, {\n                    name,\n                    users: studentIds,\n                    tasks: taskIds,\n                });\n            } else {\n                group = await GroupStore.createGroup({\n                    name,\n                    users: studentIds,\n                    tasks: taskIds,\n                    owner: UserStore.user!.id,\n                    slug: name + Math.random(),\n                });\n            }\n            setVisibleCreateGroupModal(false);\n            setVisibleEditGroupModal(false);\n            group && setCurrentGroup(group);\n\n            const successText = isEditMode ? `Группа ${name} успешно изменена!` : `Группа ${name} успешно создана!`;\n            message.success(successText);\n        } catch (error) {\n            console.info(error);\n            const statusText = error.response?.statusText;\n            const errorText = error.response?.status === 401 ? 'Пользователь не найден' : statusText || error.message;\n            message.error(`Не удалось ${isEditMode ? 'изменить' : 'создать'} группу. ${errorText}`);\n        }\n    }\n\n    function onCancel() {\n        setVisibleCreateGroupModal(false);\n        setVisibleEditGroupModal(false);\n    }\n\n    function renderCreateGroupModal() {\n        const title = isEditMode ? `Редактирование группы ${currentGroup?.name}` : 'Создание группы';\n        const initialValues: Values | undefined =\n            isEditMode && currentGroup\n                ? {\n                      name: currentGroup.name,\n                      taskIds: currentGroup.tasks,\n                      studentIds: currentGroup.users,\n                  }\n                : undefined;\n\n        return (\n            <Modal\n                onCancel={onCancel}\n                title={title}\n                footer={null}\n                visible={visibleCreateGroupModal || visibleEditGroupModal}\n                destroyOnClose\n            >\n                <Form name=\"basic\" initialValues={initialValues} onFinish={onCreate}>\n                    <Form.Item\n                        label=\"Имя группы\"\n                        name=\"name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Введите имя группы',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"studentIds\"\n                        label=\"Ученики\"\n                        rules={[{ required: true, message: 'Выберите хотя бы одного ученика' }]}\n                    >\n                        <Select placeholder=\"Выберите учеников\" mode=\"multiple\">\n                            {UserStore.list.data.map((user) => (\n                                <Option key={user.id} value={user.id}>\n                                    {UserUtils.getFullName(user)}\n                                </Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"taskIds\"\n                        label=\"Задачи\"\n                        rules={[{ required: true, message: 'Выберите хотя бы одну задачу' }]}\n                    >\n                        <Select placeholder=\"Выберите задачи\" mode=\"multiple\">\n                            {TaskStore.list.data.map((task) => (\n                                <Option key={task.id} value={task.id}>\n                                    {task.name}\n                                </Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <div className={styles.footer}>\n                        <Form.Item>\n                            <Button loading={GroupStore.isLoading} type=\"primary\" htmlType=\"submit\">\n                                {isEditMode ? 'Сохранить' : 'Создать'}\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button onClick={onCancel}>Отмена</Button>\n                        </Form.Item>\n                    </div>\n                </Form>\n            </Modal>\n        );\n    }\n\n    return (\n        <div className={styles.groups}>\n            {renderCreateGroupModal()}\n            <div className={styles.subHeader}>\n                {renderDropdownGroups()}\n                <Button onClick={() => setVisibleEditGroupModal(true)}>Редактировать группу</Button>\n                <Button type=\"primary\" onClick={() => setVisibleCreateGroupModal(true)}>\n                    Создать группу\n                </Button>\n            </div>\n            <div className={styles.studentsAndTasks}>\n                <List\n                    locale={{\n                        emptyText: 'В этой группе нет учеников',\n                    }}\n                    header={<PageHeader title=\"Список учеников в группе\" />}\n                    className={styles.students}\n                    itemLayout=\"horizontal\"\n                    dataSource={UserStore.list.data.filter((user) => currentGroup.users.includes(user.id))}\n                    renderItem={(user) => <List.Item>{UserUtils.getFullName(user)}</List.Item>}\n                />\n                <List\n                    locale={{\n                        emptyText: 'В этой группе нет задач',\n                    }}\n                    header={<PageHeader title=\"Задачи в группе\" />}\n                    className={styles.tasks}\n                    itemLayout=\"horizontal\"\n                    dataSource={TaskStore.list.data.filter((task) => currentGroup.tasks.includes(task.id))}\n                    renderItem={(task) => <List.Item>{task.name}</List.Item>}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport const GroupsPage = observer(_GroupsPage);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { GroupsPage } from 'src/components/TeacherPage/TeacherStudents/GroupsPage';\n\nfunction _TeacherStudents() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"students\">\n                <GroupsPage />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherStudents = observer<RouteComponentProps>(_TeacherStudents);\n","import { WithLoadingFlags } from 'src/helpers/StoreHelper';\nimport axios from 'axios';\nimport { SimpleUser } from 'src/stores/User';\nimport { Task } from 'src/stores/Task';\n\nfunction getApi() {\n    return {\n        async loadList(): Promise<MonitorData[]> {\n            const res = await axios.get<MonitorData[]>('api/task_checks/');\n            return res.data.sort((md1, md2) => md2.date - md1.date);\n        },\n    };\n}\n\nexport enum TaskStatus {\n    running = 'running',\n    stopped = 'stopped',\n    ce = 'ce',\n    re = 're',\n    tle = 'tle',\n    wa = 'wa',\n    ok = 'ok',\n}\ntype Language = {\n    id: number;\n    name: string;\n    slug: string;\n};\n\nexport type MonitorData = {\n    date: number;\n    id: number;\n    language: Language;\n    passed_tests_count: number;\n    status: TaskStatus;\n    task: Task;\n    tests_count: number;\n    user: SimpleUser;\n};\nclass MonitorStoreClass {\n    api = getApi();\n    list = new WithLoadingFlags<MonitorData[]>(this.api.loadList);\n}\n\nexport const MonitorStore = new MonitorStoreClass();\n","import { RouteComponentProps } from '@reach/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from 'src/components/TeacherPage/TeacherMonitor/MonitorPage.module.css';\nimport { observer } from 'mobx-react-lite';\nimport { MonitorStore, TaskStatus } from 'src/components/TeacherPage/TeacherMonitor/MonitorStore';\nimport { Button, Input, Progress, Space, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { PageSpinner } from 'src/components/PageSpinner/PageSpinner';\nimport { UserUtils } from 'src/stores/User';\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction _MonitorPage() {\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchColumn] = useState<keyof RecordType | ''>('');\n    const searchInput = useRef() as React.MutableRefObject<Input | null>;\n\n    useEffect(() => {\n        MonitorStore.list.addConsumer();\n\n        return () => {\n            MonitorStore.list.removeConsumer();\n        };\n    }, []);\n\n    if (MonitorStore.list.isLoading) {\n        return <PageSpinner />;\n    }\n\n    if (MonitorStore.list.hasError) {\n        return <>Монитор недоступен</>;\n    }\n\n    function getStringSorter(key: keyof RecordType) {\n        return (data1: RecordType, data2: RecordType) => String(data1[key]).localeCompare(String(data2[key]));\n    }\n\n    function getColumns(): ColumnsType<RecordType> {\n        return [\n            {\n                title: 'Дата',\n                dataIndex: 'date',\n                sorter: (data1, data2) => Number(data1.dateObj) - Number(data2.dateObj),\n            },\n            {\n                title: 'Ученик',\n                dataIndex: 'userName',\n                sorter: getStringSorter('userName'),\n                ...getColumnSearchProps('userName'),\n            },\n            {\n                title: 'Задача',\n                dataIndex: 'taskName',\n                sorter: getStringSorter('taskName'),\n                ...getColumnSearchProps('taskName'),\n            },\n            {\n                title: 'Язык',\n                dataIndex: 'language',\n                sorter: getStringSorter('language'),\n                ...getColumnSearchProps('language'),\n            },\n            {\n                title: 'Результат',\n                dataIndex: 'status',\n                sorter: getStringSorter('status'),\n            },\n            {\n                title: 'Количество пройденных тестов',\n                dataIndex: 'testCount',\n            },\n        ];\n    }\n\n    function getDataSource() {\n        return MonitorStore.list.data.map(\n            ({ date, user, task, language, id, passed_tests_count, tests_count, status }) => {\n                const dateObj = new Date(date);\n                const percent = Math.round((passed_tests_count * 100) / tests_count);\n                return {\n                    key: id,\n                    dateObj,\n                    date: `${dateObj.toLocaleDateString()} ${dateObj.toLocaleTimeString()}`,\n                    userName: UserUtils.getFullName(user),\n                    taskName: task.name,\n                    language: language.name,\n                    testCount: `${passed_tests_count}/${tests_count}`,\n                    status: (\n                        <div className={styles.status}>\n                            <div className={styles[status]}>{status}</div>\n                            <Progress\n                                type=\"circle\"\n                                width={30}\n                                percent={percent}\n                                status={getStatusString(percent, status)}\n                            />\n                        </div>\n                    ),\n                };\n            },\n        );\n    }\n\n    function getStatusString(percent: number, status: TaskStatus) {\n        if (percent < 100 && status !== TaskStatus.running) {\n            return 'exception';\n        }\n\n        if (percent === 100) {\n            return 'success';\n        }\n\n        return 'active';\n    }\n\n    function getColumnSearchProps(dataIndex: keyof RecordType) {\n        return {\n            filterDropdown({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) {\n                return (\n                    <div style={{ padding: 8 }}>\n                        <Input\n                            ref={searchInput}\n                            placeholder={`Поиск по ${dataIndex}`}\n                            value={selectedKeys[0]}\n                            onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                            className={styles.searchInput}\n                        />\n                        <Space>\n                            <Button\n                                type=\"primary\"\n                                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                                icon={<SearchOutlined />}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Поиск\n                            </Button>\n                            <Button\n                                onClick={() => handleReset(clearFilters)}\n                                size=\"small\"\n                                className={styles.searchButton}\n                            >\n                                Сбросить\n                            </Button>\n                        </Space>\n                    </div>\n                );\n            },\n            filterIcon(filtered: boolean) {\n                return <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />;\n            },\n            onFilter: (value: any, record: any) =>\n                record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n            onFilterDropdownVisibleChange: (visible: boolean) => {\n                if (visible) {\n                    setTimeout(() => searchInput.current?.select(), 100);\n                }\n            },\n            render(text: string) {\n                return searchedColumn === dataIndex ? (\n                    <Highlighter\n                        highlightClassName={styles.highlight}\n                        searchWords={[searchText]}\n                        autoEscape\n                        textToHighlight={text ? text.toString() : ''}\n                    />\n                ) : (\n                    text\n                );\n            },\n        };\n    }\n\n    function handleSearch(selectedKeys: string[], confirm: () => void, dataIndex: keyof RecordType) {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchColumn(dataIndex);\n    }\n\n    function handleReset(clearFilters: () => void) {\n        clearFilters();\n        setSearchText('');\n    }\n\n    type RecordType = ReturnType<typeof getDataSource>[number];\n\n    return (\n        <div className={styles.courses}>\n            <Table<RecordType> dataSource={getDataSource()} columns={getColumns()} />\n        </div>\n    );\n}\n\nexport const MonitorPage = observer<RouteComponentProps>(_MonitorPage);\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { WrapperUser } from 'src/components/WrapperUser/WrapperUser';\nimport { TeacherPage } from 'src/components/TeacherPage/TeacherPage';\nimport { MonitorPage } from './MonitorPage';\n\nfunction _TeacherMonitor() {\n    return (\n        <WrapperUser>\n            <TeacherPage path=\"monitoring\">\n                <MonitorPage />\n            </TeacherPage>\n        </WrapperUser>\n    );\n}\n\nexport const TeacherMonitor = observer<RouteComponentProps>(_TeacherMonitor);\n","import React, { useEffect } from 'react';\nimport styles from 'src/App.module.css';\nimport 'src/App.css';\nimport { navigate, Router, RouteComponentProps } from '@reach/router';\nimport { observer } from 'mobx-react-lite';\n\nimport { Login } from 'src/components/Login/Login';\nimport { LocalStorageSafe } from 'src/helpers/LocalStorageSafe';\nimport { IUser, UserStore, UserType } from 'src/stores/User';\nimport { NotFound } from 'src/components/NotFound/NotFound';\nimport { TeacherCreateTask } from 'src/components/Create';\nimport { TeacherTasks } from 'src/components/TeacherPage/TeacherTasks/TeacherTasks';\nimport { TeacherStudents } from 'src/components/TeacherPage/TeacherStudents/TeacherStudents';\nimport { TeacherMonitor } from 'src/components/TeacherPage/TeacherMonitor/TeacherMonitor';\n\nfunction _App() {\n    useEffect(() => {\n        const user = LocalStorageSafe.getItem<IUser>('user');\n        if (!user) {\n            navigate('/login');\n        } else {\n            UserStore.setUser(user);\n        }\n\n        UserStore.setCheckLogin();\n    }, []);\n\n    const IndexComponent = TeacherTasks;\n\n    return (\n        <div className={styles.app}>\n            <Router className={styles.router}>\n                {UserStore.user?.type === UserType.teacher && (\n                    <>\n                        <TeacherCreateTask path=\"create\" />\n                        <TeacherTasks path=\"tasks\" />\n                        <TeacherStudents path=\"students\" />\n                        <TeacherMonitor path=\"monitoring\" />\n                    </>\n                )}\n                <IndexComponent path=\"/\" />\n                <Login path=\"login\" />\n                <NotFound default />\n            </Router>\n        </div>\n    );\n}\n\nconst App = observer<RouteComponentProps>(_App);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { configure } from 'mobx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css';\nimport App from '../src/App';\nimport reportWebVitals from '../src/reportWebVitals';\nimport axios from 'axios';\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconfigure({\n    reactionScheduler(f) {\n        setTimeout(f); // https://habr.com/ru/company/mailru/blog/522312/#comment_22162136\n    },\n    enforceActions: 'never',\n});\n\naxios.defaults.baseURL = 'https://api.pseudocoders.online/';\n\nfunction renderApp() {\n    ReactDOM.render(<App />, document.querySelector('#root'));\n}\n\nrenderApp();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monitorPage\":\"MonitorPage_monitorPage__12FYi\",\"searchInput\":\"MonitorPage_searchInput__1A7eQ\",\"searchButton\":\"MonitorPage_searchButton__2_Llr\",\"highlight\":\"MonitorPage_highlight__y6A5c\",\"status\":\"MonitorPage_status__2uZhn\",\"running\":\"MonitorPage_running__2CRRc\",\"stopped\":\"MonitorPage_stopped__3v1aX\",\"ce\":\"MonitorPage_ce__3ZOUM\",\"re\":\"MonitorPage_re__2KimH\",\"tle\":\"MonitorPage_tle__3z8cp\",\"wa\":\"MonitorPage_wa__1lIF6\",\"ok\":\"MonitorPage_ok__LAKh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"GroupsPage_groups__LjNlr\",\"studentsAndTasks\":\"GroupsPage_studentsAndTasks__2zGq8\",\"subHeader\":\"GroupsPage_subHeader__2qgjy\",\"footer\":\"GroupsPage_footer__3XtVy\"};"],"sourceRoot":""}